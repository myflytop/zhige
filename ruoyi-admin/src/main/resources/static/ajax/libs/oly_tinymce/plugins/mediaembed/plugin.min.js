/*!
 * Tiny Enhanced Media Embed plugin
 *
 * Copyright (c) 2022 Ephox Corporation DBA Tiny Technologies, Inc.
 * Licensed under the Tiny commercial license. See https://www.tiny.cloud/legal/
 *
 * Version: 3.0.3-54
 */

!function() {
    "use strict";
    const e = Object.getPrototypeOf
      , t = (e,t,r)=>{
        var o;
        return !!r(e, t.prototype) || (null === (o = e.constructor) || void 0 === o ? void 0 : o.name) === t.name
    }
      , r = e=>r=>(e=>{
        const r = typeof e;
        return null === e ? "null" : "object" === r && Array.isArray(e) ? "array" : "object" === r && t(e, String, ((e,t)=>t.isPrototypeOf(e))) ? "string" : r
    }
    )(r) === e
      , o = e=>t=>typeof t === e
      , n = r("string")
      , s = r("object")
      , a = r=>((r,o)=>s(r) && t(r, o, ((t,r)=>e(t) === r)))(r, Object)
      , i = r("array")
      , l = o("boolean")
      , c = o("function")
      , u = o("number");
    class d {
        constructor(e, t) {
            this.tag = e,
            this.value = t
        }
        static some(e) {
            return new d(!0,e)
        }
        static none() {
            return d.singletonNone
        }
        fold(e, t) {
            return this.tag ? t(this.value) : e()
        }
        isSome() {
            return this.tag
        }
        isNone() {
            return !this.tag
        }
        map(e) {
            return this.tag ? d.some(e(this.value)) : d.none()
        }
        bind(e) {
            return this.tag ? e(this.value) : d.none()
        }
        exists(e) {
            return this.tag && e(this.value)
        }
        forall(e) {
            return !this.tag || e(this.value)
        }
        filter(e) {
            return !this.tag || e(this.value) ? this : d.none()
        }
        getOr(e) {
            return this.tag ? this.value : e
        }
        or(e) {
            return this.tag ? this : e
        }
        getOrThunk(e) {
            return this.tag ? this.value : e()
        }
        orThunk(e) {
            return this.tag ? this : e()
        }
        getOrDie(e) {
            if (this.tag)
                return this.value;
            throw new Error(null != e ? e : "Called getOrDie on None")
        }
        static from(e) {
            return null == e ? d.none() : d.some(e)
        }
        getOrNull() {
            return this.tag ? this.value : null
        }
        getOrUndefined() {
            return this.value
        }
        each(e) {
            this.tag && e(this.value)
        }
        toArray() {
            return this.tag ? [this.value] : []
        }
        toString() {
            return this.tag ? `some(${this.value})` : "none()"
        }
    }
    d.singletonNone = new d(!1);
    const m = (e,t)=>((e,t,r)=>"" === t || e.length >= t.length && e.substr(0, 0 + t.length) === t)(e, t)
      , p = e=>parseInt(e, 10)
      , h = (e,t)=>{
        const r = e - t;
        return 0 === r ? 0 : r > 0 ? 1 : -1
    }
      , f = (e,t,r)=>({
        major: e,
        minor: t,
        patch: r
    })
      , g = e=>{
        const t = /([0-9]+)\.([0-9]+)\.([0-9]+)(?:(\-.+)?)/.exec(e);
        return t ? f(p(t[1]), p(t[2]), p(t[3])) : f(0, 0, 0)
    }
      , y = e=>t=>t.options.get(e)
      , b = y("mediaembed_content_css")
      , v = y("mediaembed_max_width")
      , w = y("mediaembed_inline_styles")
      , S = y("mediaembed_service_url")
      , x = e=>{
        if (null == e)
            throw new Error("Node cannot be null or undefined");
        return {
            dom: e
        }
    }
      , E = (e,t)=>{
        const r = (t || document).createElement(e);
        return x(r)
    }
      , T = x;
    "undefined" != typeof window ? window : Function("return this;")();
    const O = (1,
    e=>1 === (e=>e.dom.nodeType)(e));
    const C = ()=>{}
      , A = e=>()=>e
      , k = e=>e
      , N = e=>e()
      , j = A(!1)
      , _ = A(!0)
      , R = Array.prototype.slice
      , I = Array.prototype.indexOf
      , P = Array.prototype.push
      , D = (e,t)=>((e,t)=>I.call(e, t))(e, t) > -1
      , M = (e,t)=>{
        const r = e.length
          , o = new Array(r);
        for (let n = 0; n < r; n++) {
            const r = e[n];
            o[n] = t(r, n)
        }
        return o
    }
      , F = (e,t)=>{
        for (let r = 0, o = e.length; r < o; r++)
            t(e[r], r)
    }
      , V = (e,t)=>{
        const r = [];
        for (let o = 0, n = e.length; o < n; o++) {
            const n = e[o];
            t(n, o) && r.push(n)
        }
        return r
    }
      , q = (e,t)=>((e,t,r)=>{
        for (let o = 0, n = e.length; o < n; o++) {
            const n = e[o];
            if (t(n, o))
                return d.some(n);
            if (r(n, o))
                break
        }
        return d.none()
    }
    )(e, t, j)
      , K = (e,t)=>(e=>{
        const t = [];
        for (let r = 0, o = e.length; r < o; ++r) {
            if (!i(e[r]))
                throw new Error("Arr.flatten item " + r + " was not an array, input: " + e);
            P.apply(t, e[r])
        }
        return t
    }
    )(M(e, t))
      , B = c(Array.from) ? Array.from : e=>R.call(e)
      , J = e=>d.from(e.dom.parentNode).map(T)
      , L = e=>d.from(e.dom.nextSibling).map(T)
      , U = e=>M(e.dom.childNodes, T)
      , H = e=>((e,t)=>{
        const r = e.dom.childNodes;
        return d.from(r[0]).map(T)
    }
    )(e)
      , W = Object.keys
      , z = Object.hasOwnProperty
      , $ = (e,t)=>{
        const r = W(e);
        for (let o = 0, n = r.length; o < n; o++) {
            const n = r[o];
            t(e[n], n)
        }
    }
      , Y = (e,t)=>G(e, t) ? d.from(e[t]) : d.none()
      , G = (e,t)=>z.call(e, t)
      , X = (e,t,r)=>{
        ((e,t,r)=>{
            if (!(n(r) || l(r) || u(r)))
                throw console.error("Invalid call to Attribute.set. Key ", t, ":: Value ", r, ":: Element ", e),
                new Error("Attribute value was not simple");
            e.setAttribute(t, r + "")
        }
        )(e.dom, t, r)
    }
      , Q = e=>void 0 !== e.style && c(e.style.getPropertyValue)
      , Z = (e,t,r)=>{
        if (!n(r))
            throw console.error("Invalid call to CSS.set. Property ", t, ":: Value ", r, ":: Element ", e),
            new Error("CSS value must be a string: " + r);
        Q(e) && e.style.setProperty(t, r)
    }
      , ee = (e,t,r)=>{
        const o = e.dom;
        Z(o, t, r)
    }
      , te = (e,t)=>{
        L(e).fold((()=>{
            J(e).each((e=>{
                re(e, t)
            }
            ))
        }
        ), (e=>{
            ((e,t)=>{
                J(e).each((r=>{
                    r.dom.insertBefore(t.dom, e.dom)
                }
                ))
            }
            )(e, t)
        }
        ))
    }
      , re = (e,t)=>{
        e.dom.appendChild(t.dom)
    }
      , oe = e=>{
        const t = e.dom;
        null !== t.parentNode && t.parentNode.removeChild(t)
    }
      , ne = e=>{
        const t = E("div")
          , r = T(e.dom.cloneNode(!0));
        return re(t, r),
        (e=>e.dom.innerHTML)(t)
    }
      , se = e=>((e,t)=>T(e.dom.cloneNode(!0)))(e)
      , ae = (e,t)=>((e,r)=>V(U(e), (e=>((e,t)=>{
        const r = e.dom;
        if (1 !== r.nodeType)
            return !1;
        {
            const e = r;
            if (void 0 !== e.matches)
                return e.matches(t);
            if (void 0 !== e.msMatchesSelector)
                return e.msMatchesSelector(t);
            if (void 0 !== e.webkitMatchesSelector)
                return e.webkitMatchesSelector(t);
            if (void 0 !== e.mozMatchesSelector)
                return e.mozMatchesSelector(t);
            throw new Error("Browser lacks native selectors")
        }
    }
    )(e, t))))(e)
      , ie = (e,t)=>((e,t)=>{
        const r = void 0 === t ? document : t.dom;
        return 1 !== (o = r).nodeType && 9 !== o.nodeType && 11 !== o.nodeType || 0 === o.childElementCount ? [] : M(r.querySelectorAll(e), T);
        var o
    }
    )(t, e);
    var le = function(e) {
        var t, r, o = e, n = {
            a: 0,
            b: 0,
            c: 0
        }, s = [];
        return t = function(t, r) {
            var a, i, l, c, u, d;
            if (t.test(o))
                for (i = 0,
                l = (a = o.match(t)).length; i < l; i += 1)
                    n[r] += 1,
                    c = a[i],
                    u = o.indexOf(c),
                    d = c.length,
                    s.push({
                        selector: e.substr(u, d),
                        type: r,
                        index: u,
                        length: d
                    }),
                    o = o.replace(c, Array(d + 1).join(" "))
        }
        ,
        (r = function(e) {
            var t, r, n, s;
            if (e.test(o))
                for (r = 0,
                n = (t = o.match(e)).length; r < n; r += 1)
                    s = t[r],
                    o = o.replace(s, Array(s.length + 1).join("A"))
        }
        )(/\\[0-9A-Fa-f]{6}\s?/g),
        r(/\\[0-9A-Fa-f]{1,5}\s/g),
        r(/\\./g),
        function() {
            var e, t, r, n, s = /{[^]*/gm;
            if (s.test(o))
                for (t = 0,
                r = (e = o.match(s)).length; t < r; t += 1)
                    n = e[t],
                    o = o.replace(n, Array(n.length + 1).join(" "))
        }(),
        t(/(\[[^\]]+\])/g, "b"),
        t(/(#[^\#\s\+>~\.\[:\)]+)/g, "a"),
        t(/(\.[^\s\+>~\.\[:\)]+)/g, "b"),
        t(/(::[^\s\+>~\.\[:]+|:first-line|:first-letter|:before|:after)/gi, "c"),
        t(/(:(?!not|global|local)[\w-]+\([^\)]*\))/gi, "b"),
        t(/(:(?!not|global|local)[^\s\+>~\.\[:]+)/g, "b"),
        o = (o = (o = (o = (o = (o = o.replace(/[\*\s\+>~]/g, " ")).replace(/[#\.]/g, " ")).replace(/:not/g, "    ")).replace(/:local/g, "      ")).replace(/:global/g, "       ")).replace(/[\(\)]/g, " "),
        t(/([^\s\+>~\.\[:]+)/g, "c"),
        s.sort((function(e, t) {
            return e.index - t.index
        }
        )),
        {
            selector: e,
            specificity: "0," + n.a.toString() + "," + n.b.toString() + "," + n.c.toString(),
            specificityArray: [0, n.a, n.b, n.c],
            parts: s
        }
    }
      , ce = e=>{
        const t = e.dom.styleSheets;
        return Array.prototype.slice.call(t)
    }
    ;
    const ue = e=>{
        const t = e.selectorText
          , r = e.style.cssText;
        if (void 0 === r)
            throw new Error("WARNING: Browser does not support cssText property");
        return {
            selector: t,
            style: r,
            raw: e.style
        }
    }
      , de = e=>{
        const t = e.cssRules;
        return K(t, (e=>(e=>e.type === window.CSSRule.IMPORT_RULE)(e) ? de(e.styleSheet) : (e=>e.type === window.CSSRule.STYLE_RULE)(e) ? [ue(e)] : []))
    }
      , me = e=>K(e, de)
      , pe = (e,t,r)=>{
        const o = e=>-1 !== e.selector.indexOf(",")
          , n = K(V(e, o), (e=>{
            const t = e.selector.split(",");
            return M(t, (t=>({
                selector: t.trim(),
                raw: e.raw
            })))
        }
        ))
          , s = V(e, (e=>!o(e))).concat(n);
        s.sort(((e,t)=>function(e, t) {
            var r, o, n;
            if ("string" == typeof e) {
                if (-1 !== e.indexOf(","))
                    throw "Invalid CSS selector";
                r = le(e).specificityArray
            } else {
                if (!Array.isArray(e))
                    throw "Invalid CSS selector or specificity array";
                if (4 !== e.filter((function(e) {
                    return "number" == typeof e
                }
                )).length)
                    throw "Invalid specificity array";
                r = e
            }
            if ("string" == typeof t) {
                if (-1 !== t.indexOf(","))
                    throw "Invalid CSS selector";
                o = le(t).specificityArray
            } else {
                if (!Array.isArray(t))
                    throw "Invalid CSS selector or specificity array";
                if (4 !== t.filter((function(e) {
                    return "number" == typeof e
                }
                )).length)
                    throw "Invalid specificity array";
                o = t
            }
            for (n = 0; n < 4; n += 1) {
                if (r[n] < o[n])
                    return -1;
                if (r[n] > o[n])
                    return 1
            }
            return 0
        }(e.selector, t.selector))).reverse(),
        ((e,t,r)=>{
            const o = K(t, (t=>{
                const r = ie(e, t.selector);
                return F(r, (e=>{
                    const r = ((e,t)=>{
                        const r = {};
                        return F(e, (o=>{
                            if (void 0 !== e[o]) {
                                const n = t.dom.style;
                                D(n, o) || (r[o] = e[o])
                            }
                        }
                        )),
                        r
                    }
                    )(t.raw, e);
                    ((e,t)=>{
                        const r = e.dom;
                        $(t, ((e,t)=>{
                            Z(r, t, e)
                        }
                        ))
                    }
                    )(e, r)
                }
                )),
                r
            }
            ));
            r && F(o, (e=>{
                e.dom.removeAttribute("class")
            }
            ))
        }
        )(t, s, r)
    }
      , he = (e,t,r,o)=>{
        const n = ce(e)
          , s = me(n).map((e=>{
            const t = e.selector;
            return {
                selector: r.hasOwnProperty(t) ? r[t] : t,
                raw: e.raw
            }
        }
        ));
        pe(s, t, o)
    }
      , fe = (e,t,r,o)=>{
        const n = ce(e)
          , s = me(n)
          , a = V(s, (e=>m(e.selector, r)));
        pe(a, t, o)
    }
      , ge = (e,t,r,o)=>{
        const n = ce(e)
          , s = me(n)
          , a = V(s, (e=>D(r, e.selector)));
        pe(a, t, o)
    }
    ;
    var ye = {
        inlineStyles: (e,t,r)=>{
            he(e, t, r, !0)
        }
        ,
        inlineStylesKeepClasses: (e,t,r)=>{
            he(e, t, r, !1)
        }
        ,
        inlinePrefixedStyles: (e,t,r)=>{
            fe(e, t, r, !0)
        }
        ,
        inlinePrefixedStylesKeepClasses: (e,t,r)=>{
            fe(e, t, r, !1)
        }
        ,
        inlineSelectorsStyles: (e,t,r)=>{
            ge(e, t, r, !0)
        }
        ,
        inlineSelectorsStylesKeepClasses: (e,t,r)=>{
            ge(e, t, r, !1)
        }
    }
      , be = {
        inlineStyles: ye.inlineStyles,
        inlineStylesKeepClasses: ye.inlineStylesKeepClasses,
        inlinePrefixedStyles: ye.inlinePrefixedStyles,
        inlinePrefixedStylesKeepClasses: ye.inlinePrefixedStylesKeepClasses,
        inlineSelectorsStyles: ye.inlineSelectorsStyles,
        inlineSelectorsStylesKeepClasses: ye.inlineSelectorsStylesKeepClasses
    };
    const ve = e=>e.dom.textContent
      , we = (e,t)=>{
        const r = t[t.length - 1];
        return ((e,t)=>{
            for (let t = 0, s = e.length; t < s; t++)
                if (o = e[t],
                n = void 0,
                n = r,
                o.dom === n.dom)
                    return d.some(t);
            var o, n;
            return d.none()
        }
        )(e).getOrDie("how is it possible you can't find a br you just found?")
    }
      , Se = e=>V(ae(e, "br"), (e=>L(e).isSome()))
      , xe = e=>{
        return t = (e,t)=>e + ve(t),
        r = "",
        F(e, ((e,o)=>{
            r = t(r, e)
        }
        )),
        r;
        var t, r
    }
      , Ee = e=>{
        const t = Se(e);
        if (t.length > 0) {
            const r = U(e)
              , o = we(r, t)
              , n = r.slice(o + 1);
            return xe(n)
        }
        return d.from(ve(e)).getOr("")
    }
      , Te = e=>O(e) ? e : L(e).fold((()=>e), Te)
      , Oe = (e,t)=>{
        const r = e.parser.parse(t, {
            isRootContent: !0,
            forced_root_block: !1
        })
          , o = tinymce.html.Serializer({
            validate: !0
        }, e.schema).serialize(r)
          , n = T(e.dom.createFragment(o));
        return ke(e, n)
    }
      , Ce = (e,t)=>t.dom.nodeName.toLowerCase() === e.toLowerCase()
      , Ae = (e,t)=>{
        const r = e.dom.createFragment(t);
        return Te(T(r.firstChild))
    }
      , ke = (e,t)=>{
        if (w(e)) {
            const r = E("div");
            re(r, t);
            const o = e.getDoc()
              , n = T(o);
            be.inlinePrefixedStyles(n, r, ".ephox-summary-card");
            const s = ie(r, "*[style]");
            return F(s, (e=>{
                var t;
                (t = e,
                "style",
                d.from(((e,t)=>{
                    const r = e.dom.getAttribute("style");
                    return null === r ? void 0 : r
                }
                )(t))).each((t=>X(e, "data-mce-style", t)))
            }
            )),
            ((e,t)=>{
                const r = document.createDocumentFragment();
                return F(e, (e=>{
                    r.appendChild(e.dom)
                }
                )),
                T(r)
            }
            )(U(r))
        }
        return t
    }
      , Ne = (e,t,r)=>{
        const o = se(r);
        return ((e,t)=>{
            const r = ((e,t)=>Q(e) ? e.style.getPropertyValue(t) : "")(e.dom, t);
            return d.from(r).filter((e=>e.length > 0))
        }
        )(o, "max-width").isNone() && ee(o, "max-width", t + "px"),
        X(o, "data-ephox-embed-iri", e),
        X(o, "contentEditable", !1),
        o
    }
      , je = (e,t,r)=>Ce("A", t) ? t : ((e,t,r)=>Ce("DIV", t) ? Ne(e, r, t) : Ne(e, r, (e=>{
        const t = E("div");
        return re(t, se(e)),
        t
    }
    )((e=>((Ce("VIDEO", e) || Ce("AUDIO", e)) && ee(e, "width", "100%"),
    e))(t))))(e, t, r)
      , _e = (e,t,r)=>{
        const o = Ae(e, r);
        return ne(je(t, o, v(e)))
    }
      , Re = (e,t,r,o)=>{
        const n = je(r, Ae(e, o), v(e));
        Ce("DIV", n) ? ((e,t,r)=>{
            const o = Oe(e, ne(r));
            H(o).each((r=>{
                e.undoManager.transact((()=>{
                    te(t, r),
                    oe(t)
                }
                ))
            }
            ))
        }
        )(e, t, n) : ((e,t,r)=>{
            const o = Oe(e, ne(r));
            e.undoManager.transact((()=>{
                var e;
                (e = t).dom.textContent = "",
                F(U(e), (e=>{
                    oe(e)
                }
                )),
                re(t, o)
            }
            ))
        }
        )(e, t, n)
    }
      , Ie = e=>{
        const t = (e=>{
            const t = e.split(" ")
              , r = {};
            return F(t, (e=>{
                r[e.toLowerCase()] = !0
            }
            )),
            r
        }
        )(e);
        return e=>!!e && e.nodeName.toLowerCase()in t
    }
      , Pe = Ie("h1 h2 h3 h4 h5 h6 p span")
      , De = Ie("strong em b span a br")
      , Me = e=>Pe(e.dom) && (e=>{
        return q((e=>e ? B(e.querySelectorAll("*")) : [])(e), (t = De,
        e=>!t(e))).isNone();
        var t
    }
    )(e.dom)
      , Fe = e=>/^https?:\/\/\S+$/i.test(e.trim())
      , Ve = e=>d.from(e).filter(Me).map(Ee).filter(Fe)
      , qe = (e,t,r,o)=>{
        const n = (s = T(e.newBlock),
        d.from(s.dom.previousSibling).map(T));
        var s;
        n.filter(O).bind(Ve).map((e=>{
            r.getAndHandleResponse(e, (r=>{
                const o = r.recommended().html();
                ((e,t,r,o)=>{
                    t.filter((e=>J(e).isSome())).each((t=>{
                        const n = Se(t);
                        n.length > 0 ? ((e,t,r,o,n)=>{
                            const s = U(t)
                              , a = we(s, r)
                              , i = s.slice(a)
                              , l = s.slice(a + 1);
                            if (xe(l) === o) {
                                const r = je(o, Ae(e, n), v(e));
                                Ce("DIV", r) ? ((e,t,r,o)=>{
                                    const n = Oe(e, ne(o));
                                    H(n).each((o=>{
                                        e.undoManager.transact((()=>{
                                            te(t, o),
                                            F(r, oe)
                                        }
                                        ))
                                    }
                                    ))
                                }
                                )(e, t, i, r) : ((e,t,r,o)=>{
                                    const n = Oe(e, ne(o));
                                    e.undoManager.transact((()=>{
                                        F(r, oe),
                                        re(t, n)
                                    }
                                    ))
                                }
                                )(e, t, l, r)
                            }
                        }
                        )(e, t, n, r, o) : Re(e, t, r, o)
                    }
                    ))
                }
                )(t, n, e, o)
            }
            ), o.logError)
        }
        ))
    }
      , Ke = e=>{
        F(e, (e=>{
            const t = new tinymce.html.Node("span",1);
            t.attr("class", "mce-shim"),
            t.attr("data-mce-bogus", "1"),
            e.append(t),
            e.attr("contenteditable", "false")
        }
        ))
    }
      , Be = e=>{
        F(e, (e=>{
            e.attr("contenteditable", null)
        }
        ))
    }
      , Je = "media_url_resolver"
      , Le = [{
        code: 404,
        message: "The specified url was not found."
    }, {
        code: 600,
        message: "The specified service did not respond correctly."
    }, {
        code: 601,
        message: "The specified service did not respond correctly."
    }]
      , Ue = (e,t)=>q(Le, (e=>e.code === t)).fold((()=>"Server didn't produce a valid result. (" + t + ")"), (e=>e.message))
      , He = e=>{
        const t = t=>t(e)
          , r = A(e)
          , o = ()=>n
          , n = {
            tag: !0,
            inner: e,
            fold: (t,r)=>r(e),
            isValue: _,
            isError: j,
            map: t=>ze.value(t(e)),
            mapError: o,
            bind: t,
            exists: t,
            forall: t,
            getOr: r,
            or: o,
            getOrThunk: r,
            orThunk: o,
            getOrDie: r,
            each: t=>{
                t(e)
            }
            ,
            toOptional: ()=>d.some(e)
        };
        return n
    }
      , We = e=>{
        const t = ()=>r
          , r = {
            tag: !1,
            inner: e,
            fold: (t,r)=>t(e),
            isValue: j,
            isError: _,
            map: t,
            mapError: t=>ze.error(t(e)),
            bind: t,
            exists: j,
            forall: _,
            getOr: k,
            or: k,
            getOrThunk: N,
            orThunk: N,
            getOrDie: (o = String(e),
            ()=>{
                throw new Error(o)
            }
            ),
            each: C,
            toOptional: d.none
        };
        var o;
        return r
    }
      , ze = {
        value: He,
        error: We,
        fromOption: (e,t)=>e.fold((()=>We(t)), He)
    };
    var $e;
    !function(e) {
        e[e.Error = 0] = "Error",
        e[e.Value = 1] = "Value"
    }($e || ($e = {}));
    const Ye = (e,t,r)=>e.stype === $e.Error ? t(e.serror) : r(e.svalue)
      , Ge = e=>({
        stype: $e.Value,
        svalue: e
    })
      , Xe = e=>({
        stype: $e.Error,
        serror: e
    })
      , Qe = Ye
      , Ze = e=>s(e) && W(e).length > 100 ? " removed due to size" : JSON.stringify(e, null, 2)
      , et = (e,t)=>Xe([{
        path: e,
        getErrorInfo: t
    }])
      , tt = (rt = (e,t)=>a(e) && a(t) ? tt(e, t) : t,
    (...e)=>{
        if (0 === e.length)
            throw new Error("Can't merge zero objects");
        const t = {};
        for (let r = 0; r < e.length; r++) {
            const o = e[r];
            for (const e in o)
                G(o, e) && (t[e] = rt(t[e], o[e]))
        }
        return t
    }
    );
    var rt;
    const ot = (e,t,r)=>{
        switch (e.tag) {
        case "field":
            return t(e.key, e.newKey, e.presence, e.prop);
        case "custom":
            return r(e.newKey, e.instantiator)
        }
    }
      , nt = e=>({
        extract: (t,r)=>{
            return o = e(r),
            n = e=>((e,t)=>et(e, A(t)))(t, e),
            o.stype === $e.Error ? n(o.serror) : o;
            var o, n
        }
        ,
        toString: A("val")
    })
      , st = nt(Ge)
      , at = (e,t,r,o)=>o(Y(e, t).getOrThunk((()=>r(e))))
      , it = (e,t,r,o,n)=>{
        const s = e=>n.extract(t.concat([o]), e)
          , a = e=>e.fold((()=>Ge(d.none())), (e=>{
            const r = n.extract(t.concat([o]), e);
            return s = r,
            a = d.some,
            s.stype === $e.Value ? {
                stype: $e.Value,
                svalue: a(s.svalue)
            } : s;
            var s, a
        }
        ));
        switch (e.tag) {
        case "required":
            return ((e,t,r,o)=>Y(t, r).fold((()=>((e,t,r)=>et(e, (()=>'Could not find valid *required* value for "' + t + '" in ' + Ze(r))))(e, r, t)), o))(t, r, o, s);
        case "defaultedThunk":
            return at(r, o, e.process, s);
        case "option":
            return ((e,t,r)=>r(Y(e, t)))(r, o, a);
        case "defaultedOptionThunk":
            return ((e,t,r,o)=>o(Y(e, t).map((t=>!0 === t ? r(e) : t))))(r, o, e.process, a);
        case "mergeWithThunk":
            return at(r, o, A({}), (t=>{
                const o = tt(e.process(r), t);
                return s(o)
            }
            ))
        }
    }
      , lt = e=>({
        extract: (t,r)=>((e,t,r)=>{
            const o = {}
              , n = [];
            for (const s of r)
                ot(s, ((r,s,a,i)=>{
                    const l = it(a, e, t, r, i);
                    Qe(l, (e=>{
                        n.push(...e)
                    }
                    ), (e=>{
                        o[s] = e
                    }
                    ))
                }
                ), ((e,r)=>{
                    o[e] = r(t)
                }
                ));
            return n.length > 0 ? Xe(n) : Ge(o)
        }
        )(t, r, e),
        toString: ()=>{
            const t = M(e, (e=>ot(e, ((e,t,r,o)=>e + " -> " + o.toString()), ((e,t)=>"state(" + e + ")"))));
            return "obj{\n" + t.join("\n") + "}"
        }
    })
      , ct = (e,t,r)=>{
        return o = ((e,t,r)=>((e,t)=>e.stype === $e.Error ? {
            stype: $e.Error,
            serror: t(e.serror)
        } : e)(t.extract([e], r), (e=>({
            input: r,
            errors: e
        }))))(e, t, r),
        Ye(o, ze.error, ze.value);
        var o
    }
      , ut = e=>"Errors: \n" + (e=>{
        const t = e.length > 10 ? e.slice(0, 10).concat([{
            path: [],
            getErrorInfo: A("... (only showing first ten failures)")
        }]) : e;
        return M(t, (e=>"Failed path: (" + e.path.join(" > ") + ")\n" + e.getErrorInfo()))
    }
    )(e.errors).join("\n") + "\n\nInput object: " + Ze(e.input)
      , dt = e=>{
        let t = d.none()
          , r = [];
        const o = e=>{
            n() ? s(e) : r.push(e)
        }
          , n = ()=>t.isSome()
          , s = e=>{
            t.each((t=>{
                setTimeout((()=>{
                    e(t)
                }
                ), 0)
            }
            ))
        }
        ;
        return e((e=>{
            n() || (t = d.some(e),
            F(r, s),
            r = [])
        }
        )),
        {
            get: o,
            map: e=>dt((t=>{
                o((r=>{
                    t(e(r))
                }
                ))
            }
            )),
            isReady: n
        }
    }
      , mt = {
        nu: dt,
        pure: e=>dt((t=>{
            t(e)
        }
        ))
    }
      , pt = e=>{
        setTimeout((()=>{
            throw e
        }
        ), 0)
    }
      , ht = e=>{
        const t = t=>{
            e().then(t, pt)
        }
        ;
        return {
            map: t=>ht((()=>e().then(t))),
            bind: t=>ht((()=>e().then((e=>t(e).toPromise())))),
            anonBind: t=>ht((()=>e().then((()=>t.toPromise())))),
            toLazy: ()=>mt.nu(t),
            toCached: ()=>{
                let t = null;
                return ht((()=>(null === t && (t = e()),
                t)))
            }
            ,
            toPromise: e,
            get: t
        }
    }
      , ft = e=>ht((()=>new Promise(e)))
      , gt = e=>ht((()=>Promise.resolve(e)))
      , yt = e=>({
        ...e,
        toCached: ()=>yt(e.toCached()),
        bindFuture: t=>yt(e.bind((e=>e.fold((e=>gt(ze.error(e))), (e=>t(e)))))),
        bindResult: t=>yt(e.map((e=>e.bind(t)))),
        mapResult: t=>yt(e.map((e=>e.map(t)))),
        mapError: t=>yt(e.map((e=>e.mapError(t)))),
        foldResult: (t,r)=>e.map((e=>e.fold(t, r))),
        withTimeout: (t,r)=>yt(ft((o=>{
            let n = !1;
            const s = setTimeout((()=>{
                n = !0,
                o(ze.error(r()))
            }
            ), t);
            e.get((e=>{
                n || (clearTimeout(s),
                o(e))
            }
            ))
        }
        )))
    })
      , bt = e=>yt(ft(e))
      , vt = e=>yt(gt(ze.value(e)))
      , wt = {
        nu: bt,
        wrap: yt,
        pure: vt,
        value: vt,
        error: e=>yt(gt(ze.error(e))),
        fromResult: e=>yt(gt(e)),
        fromFuture: e=>yt(e.map(ze.value)),
        fromPromise: e=>bt((t=>{
            e.then((e=>{
                t(ze.value(e))
            }
            ), (e=>{
                t(ze.error(e))
            }
            ))
        }
        ))
    }
      , St = ()=>(new Date).getTime();
    var xt;
    !function(e) {
        e.JSON = "json",
        e.Blob = "blob",
        e.Text = "text",
        e.FormData = "formdata",
        e.MultipartFormData = "multipart/form-data"
    }(xt || (xt = {}));
    const Et = e=>ft((t=>{
        const r = new FileReader;
        r.onload = e=>{
            const r = e.target ? e.target.result : "";
            t(r)
        }
        ,
        r.readAsText(e)
    }
    ))
      , Tt = e=>{
        try {
            const t = JSON.parse(e);
            return ze.value(t)
        } catch (e) {
            return ze.error("Response was not JSON.")
        }
    }
      , Ot = e=>gt(e.response)
      , Ct = (e,t)=>t.map((t=>{
        const r = ((e,t)=>{
            const r = [];
            return $(e, ((e,t)=>{
                var o;
                r.push((o = e,
                encodeURIComponent(t) + "=" + encodeURIComponent(o)))
            }
            )),
            r
        }
        )(t)
          , o = ("?",
        -1 !== e.indexOf("?") ? "&" : "?");
        return r.length > 0 ? e + o + r.join("&") : e
    }
    )).getOr(e)
      , At = e=>wt.nu((t=>{
        const r = new XMLHttpRequest;
        r.open(e.method, Ct(e.url, d.from(e.query)), !0);
        const o = (e=>{
            const t = (r = e.body,
            d.from(r).bind((e=>{
                switch (e.type) {
                case xt.JSON:
                    return d.some("application/json");
                case xt.FormData:
                    return d.some("application/x-www-form-urlencoded; charset=UTF-8");
                case xt.MultipartFormData:
                    return d.none();
                case xt.Text:
                default:
                    return d.some("text/plain")
                }
            }
            )));
            var r;
            const o = !0 === e.credentials ? d.some(!0) : d.none()
              , n = (e=>{
                switch (e) {
                case xt.Blob:
                    return "application/octet-stream";
                case xt.JSON:
                    return "application/json, text/javascript";
                case xt.Text:
                    return "text/plain";
                default:
                    return ""
                }
            }
            )(e.responseType) + ", */*; q=0.01"
              , s = void 0 !== e.headers ? e.headers : {};
            return {
                contentType: t,
                responseType: (e=>{
                    switch (e) {
                    case xt.JSON:
                        return d.none();
                    case xt.Blob:
                        return d.some("blob");
                    case xt.Text:
                        return d.some("text");
                    default:
                        return d.none()
                    }
                }
                )(e.responseType),
                credentials: o,
                accept: n,
                headers: s,
                progress: c(e.progress) ? d.some(e.progress) : d.none()
            }
        }
        )(e);
        ((e,t)=>{
            t.contentType.each((t=>e.setRequestHeader("Content-Type", t))),
            e.setRequestHeader("Accept", t.accept),
            t.credentials.each((t=>e.withCredentials = t)),
            t.responseType.each((t=>e.responseType = t)),
            t.progress.each((t=>e.upload.addEventListener("progress", (e=>t(e.loaded, e.total))))),
            $(t.headers, ((t,r)=>e.setRequestHeader(r, t)))
        }
        )(r, o);
        const n = ()=>{
            ((e,t,r)=>((e,t)=>{
                switch (e) {
                case xt.JSON:
                    return Tt(t.response).fold((()=>Ot(t)), gt);
                case xt.Blob:
                    return (e=>d.from(e.response).map(Et).getOr(gt("no response content")))(t);
                case xt.Text:
                default:
                    return Ot(t)
                }
            }
            )(t, r).map((t=>({
                message: 0 === r.status ? "Unknown HTTP error (possible cross-domain request)" : `Could not load url ${e}: ${r.statusText}`,
                status: r.status,
                responseText: t
            }))))(e.url, e.responseType, r).get((e=>t(ze.error(e))))
        }
        ;
        var s;
        r.onerror = n,
        r.onload = ()=>{
            0 !== r.status || m(e.url, "file:") ? r.status < 100 || r.status >= 400 ? n() : ((e,t)=>{
                const r = e=>wt.error({
                    message: e,
                    status: t.status,
                    responseText: t.responseText
                });
                switch (e) {
                case xt.JSON:
                    return Tt(t.response).fold(r, wt.pure);
                case xt.Blob:
                case xt.Text:
                    return wt.pure(t.response);
                default:
                    return r("unknown data type")
                }
            }
            )(e.responseType, r).get(t) : n()
        }
        ,
        (s = e.body,
        d.from(s).map((e=>e.type === xt.JSON ? JSON.stringify(e.data) : e.type === xt.FormData || e.type === xt.MultipartFormData ? (e=>{
            const t = new FormData;
            return $(e, ((e,r)=>{
                t.append(r, e)
            }
            )),
            t
        }
        )(e.data) : e.data))).fold((()=>r.send()), (e=>{
            r.send(e)
        }
        ))
    }
    ))
      , kt = e=>{
        const t = e.responseText;
        return s(t) ? t : e.message
    }
      , Nt = (e,t,r=kt)=>{
        const o = (e=>Y(e, "tiny-api-key").orThunk((()=>Y(e, "tinymce-api-key"))).orThunk((()=>Y(e, "textbox-api-key"))).getOrUndefined())(t);
        return {
            execute: n=>{
                const s = (a = e=>l(e) ? String(e) : e,
                ((e,t)=>{
                    const r = {};
                    return $(e, ((e,o)=>{
                        const n = t(e, o);
                        r[n.k] = n.v
                    }
                    )),
                    r
                }
                )(n, ((e,t)=>({
                    k: t,
                    v: a(e)
                }))));
                var a;
                const i = ((e,t)=>{
                    const r = -1 === e.indexOf("?") ? "?" : "&";
                    return t ? e + r + "apiKey=" + encodeURIComponent(t) : e
                }
                )((u = s,
                e.replace(/\$\{([^{}]*)\}/g, ((e,t)=>{
                    const r = u[t];
                    return (e=>{
                        const t = typeof e;
                        return "string" === t || "number" === t
                    }
                    )(r) ? r.toString() : e
                }
                ))), o)
                  , c = (d = {
                    url: i,
                    responseType: xt.JSON,
                    credentials: !0,
                    headers: t
                },
                At({
                    ...d,
                    method: "get",
                    body: {
                        type: xt.Text,
                        data: ""
                    }
                })).mapError(r);
                var u, d;
                return wt.wrap(c)
            }
            ,
            cancelCurrent: C
        }
    }
    ;
    (e=>{
        if (!i(e))
            throw new Error("cases must be an array");
        if (0 === e.length)
            throw new Error("there must be at least one case");
        const t = []
          , r = {};
        F(e, ((o,n)=>{
            const s = W(o);
            if (1 !== s.length)
                throw new Error("one and only one name per case");
            const a = s[0]
              , l = o[a];
            if (void 0 !== r[a])
                throw new Error("duplicate key detected:" + a);
            if ("cata" === a)
                throw new Error("cannot have a case named cata (sorry)");
            if (!i(l))
                throw new Error("case arguments must be an array");
            t.push(a),
            r[a] = (...r)=>{
                const o = r.length;
                if (o !== l.length)
                    throw new Error("Wrong number of arguments to case " + a + ". Expected " + l.length + " (" + l + "), got " + o);
                return {
                    fold: (...t)=>{
                        if (t.length !== e.length)
                            throw new Error("Wrong number of arguments to fold. Expected " + e.length + ", got " + t.length);
                        return t[n].apply(null, r)
                    }
                    ,
                    match: e=>{
                        const o = W(e);
                        if (t.length !== o.length)
                            throw new Error("Wrong number of arguments to match. Expected: " + t.join(",") + "\nActual: " + o.join(","));
                        if (!((e,t)=>{
                            for (let t = 0, n = e.length; t < n; ++t)
                                if (!0 !== (r = e[t],
                                D(o, r)))
                                    return !1;
                            var r;
                            return !0
                        }
                        )(t))
                            throw new Error("Not all branches were specified when using match. Specified: " + o.join(", ") + "\nRequired: " + t.join(", "));
                        return e[a].apply(null, r)
                    }
                    ,
                    log: e=>{
                        console.log(e, {
                            constructors: t,
                            constructor: a,
                            params: r
                        })
                    }
                }
            }
        }
        ))
    }
    )([{
        bothErrors: ["error1", "error2"]
    }, {
        firstError: ["error1", "value2"]
    }, {
        secondError: ["value1", "error2"]
    }, {
        bothValues: ["value1", "value2"]
    }]);
    const jt = A(st)
      , _t = (e,t,r,o)=>({
        tag: "field",
        key: e,
        newKey: t,
        presence: r,
        prop: o
    })
      , Rt = e=>_t(e, e, {
        tag: "required",
        process: {}
    }, jt())
      , It = "iframely"
      , Pt = "oembed"
      , Dt = "fallback"
      , Mt = "wikipedia"
      , Ft = e=>"[" + e.join(", ") + "]"
      , Vt = [It, Pt, Dt]
      , qt = (e,t,r)=>((t,r)=>{
        for (let r = 0, n = t.length; r < n; r++)
            if (o = t[r],
            D(e, o))
                return !0;
        var o;
        return !1
    }
    )(t) ? ze.error("Embed response source: " + Ft(e) + " contains more than one of " + Ft(Vt)) : ze.value(r)
      , Kt = lt([Rt("url"), Rt("maxWidth"), ((e,t)=>_t(e, e, {
        tag: "defaultedThunk",
        process: A(!1)
    }, jt()))("fresh")])
      , Bt = lt([Rt("status_code"), Rt("sub_code"), Rt("msg")])
      , Jt = lt([Rt("html"), (Lt = "rels",
    Ut = [_t("source", "source", {
        tag: "required",
        process: {}
    }, (Ht = e=>i(e) ? (e=>D(e, It) ? qt(e, [Pt, Dt, Mt], It) : D(e, Pt) ? qt(e, [It, Dt, Mt], Pt) : D(e, Dt) ? qt(e, [It, Pt, Mt], Dt) : D(e, Mt) ? qt(e, [It, Pt, Dt], Mt) : ze.error("Embed response source: " + Ft(e) + " did not contain any of: " + Ft(Vt)))(e) : ze.error("Sources was not an array: " + e),
    nt((e=>Ht(e).fold(Xe, Ge)))))],
    _t(Lt, Lt, {
        tag: "required",
        process: {}
    }, lt(Ut)))]);
    var Lt, Ut, Ht, Wt = e=>ct("EmbedResponse.failure", Bt, e).fold((e=>ze.error({
        code: A(600),
        subcode: A(0),
        msg: ()=>ut(e)
    })), (e=>ze.error({
        code: A(e.status_code),
        subcode: A(e.sub_code),
        msg: A(e.msg)
    }))), zt = e=>ct("EmbedResponse.success", Jt, e).fold((e=>ze.error({
        code: A(601),
        subcode: A(0),
        msg: ()=>ut(e)
    })), (e=>ze.value({
        recommended: ()=>({
            html: A(e.html),
            source: A(e.rels.source)
        })
    })));
    const $t = (e,t,r)=>{
        const o = ((e,t=36e5)=>{
            const r = {}
              , o = (e,t,o)=>{
                r[e] = {
                    result: t,
                    timestamp: o
                }
            }
              , n = (e,r)=>e - r < t
              , a = A(r);
            return s(e) && (e=>{
                const t = St();
                $(e, ((e,r)=>{
                    n(t, e.timestamp) && o(r, e.result, e.timestamp)
                }
                ))
            }
            )(e),
            {
                set: o,
                get: (e,t)=>d.from(r[t]).filter((t=>n(e, t.timestamp))).map((e=>e.result)),
                dump: a
            }
        }
        )(r)
          , n = Nt(e + "/1/embed?url=${url}&maxWidth=${maxWidth}", t);
        return {
            checkOne: (e,t,r=!1)=>{
                const s = St()
                  , a = ((r,o,s,a,i)=>(i ? d.none() : o.get(a, s)).fold((()=>((r,o)=>{
                    const s = {
                        url: encodeURIComponent(e),
                        maxWidth: t,
                        fresh: o
                    }
                      , a = (i = "ephox.media.service.one.ajax.service.get",
                    l = Kt,
                    c = s,
                    ct(i, l, c).fold((e=>{
                        throw new Error(ut(e))
                    }
                    ), k));
                    var i, l, c;
                    return n.execute(a)
                }
                )(0, i).mapResult((e=>(o.set(s, e, a),
                e)))), (e=>wt.pure(e))))(0, o, t + "&" + e, s, r);
                return wt.wrap(a.map((e=>e.fold(Wt, zt))))
            }
            ,
            dumpCache: o.dump
        }
    }
      , Yt = (e,t)=>{
        ((e,t)=>{
            const r = e.options.register;
            r("mediaembed_content_css", {
                processor: "string",
                default: t + "/content.min.css"
            }),
            r("mediaembed_max_width", {
                processor: "number",
                default: 650
            }),
            r("mediaembed_inline_styles", {
                processor: "boolean",
                default: !1
            }),
            r("mediaembed_service_url", {
                processor: "string",
                default: ""
            }),
            r("mediaembed_api_key", {
                processor: "string"
            })
        }
        )(e, t);
        const r = (e=>{
            let t;
            const r = t=>{
                const r = (e=>{
                    if ("string" == typeof e)
                        return {
                            message: e
                        };
                    {
                        const t = e.code();
                        return {
                            message: Ue(e.msg(), t),
                            code: t
                        }
                    }
                }
                )(t);
                ((e,t)=>{
                    e.dispatch("MediaEmbedError", t)
                }
                )(e, r),
                console.error(`Media embed error: ${r.message}`)
            }
            ;
            return {
                formatMessage: Ue,
                logDialogError: e=>{
                    const o = e.msg();
                    o !== t && r(e),
                    t = o
                }
                ,
                logError: r
            }
        }
        )(e)
          , o = (e=>{
            const t = (r = S(e),
            o = (e=>{
                var t;
                return null !== (t = e.options.get("mediaembed_api_key")) && void 0 !== t ? t : e.options.get("api_key")
            }
            )(e),
            $t(r, o ? {
                "tinymce-api-key": o
            } : {}));
            var r, o;
            const n = (e,r,o)=>t.checkOne(e, r, o)
              , s = {};
            return {
                getOne: n,
                dumpCache: ()=>{
                    t.dumpCache()
                }
                ,
                getAndHandleResponse: (t,r,o)=>{
                    void 0 !== s[t] ? s[t] = s[t].concat(r) : (s[t] = [r],
                    n(t.trim(), v(e)).get((e=>e.fold((e=>{
                        o(e),
                        delete s[t]
                    }
                    ), (e=>{
                        F(s[t], (t=>{
                            t(e)
                        }
                        )),
                        delete s[t]
                    }
                    )))))
                }
            }
        }
        )(e);
        (e=>{
            e.on("click keyup touchend", (()=>{
                const t = e.selection.getNode();
                t && e.dom.getAttrib(t, "data-ephox-embed-iri") && e.dom.getAttrib(t, "data-mce-selected") && t.setAttribute("data-mce-selected", "2")
            }
            )),
            e.on("PreInit", (()=>{
                e.parser.addAttributeFilter("data-ephox-embed-iri", Ke),
                e.serializer.addAttributeFilter("data-ephox-embed-iri", Be)
            }
            ))
        }
        )(e),
        (e=>{
            const t = b(e);
            e.on("PreInit", (()=>{
                e.contentCSS.push(e.documentBaseURI.toAbsolute(t))
            }
            ))
        }
        )(e),
        e.on("SkinLoaded", (()=>{
            S(e).length > 0 ? (((e,t,r)=>{
                e.on("NewBlock", (o=>{
                    qe(o, e, t, r)
                }
                ))
            }
            )(e, o, r),
            ((e,t,r)=>{
                const o = e.options;
                o.isRegistered(Je) && !o.isSet(Je) && o.set(Je, ((e,t,r)=>(o,n,s)=>{
                    Fe(o.url) ? t.getAndHandleResponse(o.url, (t=>{
                        const r = t.recommended().html();
                        n({
                            html: _e(e, o.url, r)
                        })
                    }
                    ), (e=>{
                        r.logDialogError(e),
                        s({
                            msg: r.formatMessage(e.msg(), e.code())
                        })
                    }
                    )) : n({
                        html: ""
                    })
                }
                )(e, t, r))
            }
            )(e, o, r)) : r.logError("You need to specify the mediaembed_service_url setting")
        }
        ))
    }
    ;
    tinymce.PluginManager.add("mediaembed", ((e,t)=>{
        ((e,t)=>!!e && -1 === ((e,t)=>{
            const r = h(e.major, t.major);
            if (0 !== r)
                return r;
            const o = h(e.minor, t.minor);
            if (0 !== o)
                return o;
            const n = h(e.patch, t.patch);
            return 0 !== n ? n : 0
        }
        )((e=>g((e=>[e.majorVersion, e.minorVersion].join(".").split(".").slice(0, 3).join("."))(e)))(e), g(t)))(tinymce, "6.0.0") ? console.error("The mediaembed plugin requires at least version 6.0.0 of TinyMCE.") : Yt(e, t)
    }
    ))
}();
