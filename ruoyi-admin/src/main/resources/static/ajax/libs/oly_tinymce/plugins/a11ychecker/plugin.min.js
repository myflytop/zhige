/*!
 * Tiny Accessibility Checker Plugin
 *
 * Copyright (c) 2022 Ephox Corporation DBA Tiny Technologies, Inc.
 * Licensed under the Tiny commercial license. See https://www.tiny.cloud/legal/
 *
 * Version: 3.0.3-40
 */

!function() {
    "use strict";
    const e = e=>{
        let t = e;
        return {
            get: ()=>t,
            set: e=>{
                t = e
            }
        }
    }
      , t = e=>t=>(e=>{
        const t = typeof e;
        return null === e ? "null" : "object" === t && Array.isArray(e) ? "array" : "object" === t && (r = o = e,
        (a = String).prototype.isPrototypeOf(r) || (null === (n = o.constructor) || void 0 === n ? void 0 : n.name) === a.name) ? "string" : t;
        var r, o, a, n
    }
    )(t) === e
      , r = e=>t=>typeof t === e
      , o = t("string")
      , a = t("object")
      , n = t("array")
      , i = r("boolean")
      , s = (void 0,
    e=>undefined === e);
    const l = e=>!(e=>null == e)(e)
      , c = r("function")
      , u = r("number")
      , d = ()=>{}
      , p = e=>()=>e
      , h = e=>e
      , m = e=>e()
      , y = p(!1)
      , g = p(!0);
    class v {
        constructor(e, t) {
            this.tag = e,
            this.value = t
        }
        static some(e) {
            return new v(!0,e)
        }
        static none() {
            return v.singletonNone
        }
        fold(e, t) {
            return this.tag ? t(this.value) : e()
        }
        isSome() {
            return this.tag
        }
        isNone() {
            return !this.tag
        }
        map(e) {
            return this.tag ? v.some(e(this.value)) : v.none()
        }
        bind(e) {
            return this.tag ? e(this.value) : v.none()
        }
        exists(e) {
            return this.tag && e(this.value)
        }
        forall(e) {
            return !this.tag || e(this.value)
        }
        filter(e) {
            return !this.tag || e(this.value) ? this : v.none()
        }
        getOr(e) {
            return this.tag ? this.value : e
        }
        or(e) {
            return this.tag ? this : e
        }
        getOrThunk(e) {
            return this.tag ? this.value : e()
        }
        orThunk(e) {
            return this.tag ? this : e()
        }
        getOrDie(e) {
            if (this.tag)
                return this.value;
            throw new Error(null != e ? e : "Called getOrDie on None")
        }
        static from(e) {
            return l(e) ? v.some(e) : v.none()
        }
        getOrNull() {
            return this.tag ? this.value : null
        }
        getOrUndefined() {
            return this.value
        }
        each(e) {
            this.tag && e(this.value)
        }
        toArray() {
            return this.tag ? [this.value] : []
        }
        toString() {
            return this.tag ? `some(${this.value})` : "none()"
        }
    }
    v.singletonNone = new v(!1);
    const w = e=>parseInt(e, 10)
      , b = (e,t)=>{
        const r = e - t;
        return 0 === r ? 0 : r > 0 ? 1 : -1
    }
      , f = (e,t,r)=>({
        major: e,
        minor: t,
        patch: r
    })
      , k = e=>{
        const t = /([0-9]+)\.([0-9]+)\.([0-9]+)(?:(\-.+)?)/.exec(e);
        return t ? f(w(t[1]), w(t[2]), w(t[3])) : f(0, 0, 0)
    }
      , x = Array.prototype.slice
      , A = Array.prototype.indexOf
      , T = Array.prototype.push
      , C = (e,t)=>((e,t)=>A.call(e, t))(e, t) > -1
      , D = (e,t)=>{
        for (let r = 0, o = e.length; r < o; r++)
            if (t(e[r], r))
                return !0;
        return !1
    }
      , I = (e,t)=>{
        const r = e.length
          , o = new Array(r);
        for (let a = 0; a < r; a++) {
            const r = e[a];
            o[a] = t(r, a)
        }
        return o
    }
      , _ = (e,t)=>{
        for (let r = 0, o = e.length; r < o; r++)
            t(e[r], r)
    }
      , N = (e,t)=>{
        const r = [];
        for (let o = 0, a = e.length; o < a; o++) {
            const a = e[o];
            t(a, o) && r.push(a)
        }
        return r
    }
      , S = (e,t,r)=>(_(e, ((e,o)=>{
        r = t(r, e, o)
    }
    )),
    r)
      , O = (e,t,r)=>{
        for (let o = 0, a = e.length; o < a; o++) {
            const a = e[o];
            if (t(a, o))
                return v.some(a);
            if (r(a, o))
                break
        }
        return v.none()
    }
      , M = (e,t)=>O(e, t, y)
      , E = (e,t)=>(e=>{
        const t = [];
        for (let r = 0, o = e.length; r < o; ++r) {
            if (!n(e[r]))
                throw new Error("Arr.flatten item " + r + " was not an array, input: " + e);
            T.apply(t, e[r])
        }
        return t
    }
    )(I(e, t))
      , R = e=>{
        const t = x.call(e, 0);
        return t.reverse(),
        t
    }
      , W = p("html4")
      , H = p("html5")
      , q = p("a")
      , G = p("aa")
      , $ = p("aaa")
      , P = e=>t=>t.options.get(e)
      , L = P("a11ychecker_css_url")
      , j = P("a11ychecker_level")
      , B = P("a11ychecker_html_version")
      , V = P("a11ychecker_issue_url_callback")
      , F = P("a11ychecker_filter_issue")
      , z = e=>{
        var t;
        return null !== (t = e.options.get("a11ychecker_allow_decorative_images")) && void 0 !== t ? t : e.options.get("a11y_advanced_options")
    }
      , U = tinymce.util.I18n
      , K = {
        "a11y.d1.description": "This paragraph looks like a heading. If it is a heading, please select a heading level.",
        "a11y.d1.repair.block.h1": "Heading 1",
        "a11y.d1.repair.block.h2": "Heading 2",
        "a11y.d1.repair.block.h3": "Heading 3",
        "a11y.d1.repair.block.h4": "Heading 4",
        "a11y.d1.repair.block.h5": "Heading 5",
        "a11y.d1.repair.block.h6": "Heading 6",
        "a11y.d1.repair.info": "Select a heading level:",
        "a11y.d2.description": "Headings must be applied in sequential order. For example: Heading 1 should be followed by Heading 2, not Heading 3.",
        "a11y.d3.description": "Adjacent links with the same URL should be merged into one link",
        "a11y.d4.description": "The selected text appears to be a list. Lists should be formatted using a list tag.",
        "a11y.d5a.description": "Large text must have a contrast ratio of at least 3:1",
        "a11y.d5b.description": "Text must have a contrast ratio of at least 4.5:1",
        "a11y.d5c.description": "Text must have a contrast ratio of at least 7:1",
        "a11y.h93.description": "ID attribute must be unique",
        "a11y.h93.repair.info": "Make ID unique",
        "a11y.h93.repair.deduplicate.others": "Keep this ID and remove all others",
        "a11y.h93.repair.deduplicate.this": "Remove this ID",
        "a11y.h93.repair.deduplicate.all": "Remove all IDs",
        "a11y.i1.description.decorativeAllowed": "Images must be marked as decorative or have an alternative text description",
        "a11y.i1.description.decorativeNotAllowed": "Images must have an alternative text description. Decorative images are not allowed.",
        "a11y.i1.repair.errors.duplicate": "Alternative text cannot be the same as the filename",
        "a11y.i1.repair.errors.empty": "Alternative text cannot be empty",
        "a11y.i1.repair.info.decorativeAllowed": "Or provide alternative text:",
        "a11y.i1.repair.info.decorativeNotAllowed": "Provide alternative text:",
        "a11y.i1.repair.checkboxlabel": "Make image decorative:",
        "a11y.i1.repair.checkboxtext": "Image is decorative",
        "a11y.i2.description": "Alternative text must not be the same as the image filename",
        "a11y.i2.repair.info": "Provide alternative text:",
        "a11y.t1.description": "Tables must have captions",
        "a11y.t1.repair.errors.duplicate": "Table caption cannot be the same as the table summary",
        "a11y.t1.repair.errors.empty": "Caption cannot be empty",
        "a11y.t1.repair.info": "Provide caption:",
        "a11y.t2.description": "Complex tables should have summaries",
        "a11y.t2.repair.errors.duplicate": "Table summary cannot be the same as the table caption",
        "a11y.t2.repair.errors.empty": "Summary cannot be empty",
        "a11y.t2.repair.info": "Provide table summary:",
        "a11y.t3.description": "Table caption and summary cannot have the same value",
        "a11y.t4a.description": "Table elements must contain TR and TD tags",
        "a11y.t4b.description": "Tables must have at least one header cell",
        "a11y.t4b.repair.info": "Choose table header:",
        "a11y.t4c.description": "Table headers must be applied to a row or a column",
        "a11y.t4c.repair.header.col": "Header column",
        "a11y.t4c.repair.header.row": "Header row",
        "a11y.t4c.repair.info": "Select header scope:",
        "a11y.t4c.repair.scope.col": "Column",
        "a11y.t4c.repair.scope.colgroup": "Column group",
        "a11y.t4c.repair.scope.row": "Row",
        "a11y.t4c.repair.scope.rowgroup": "Row group",
        "a11y.widget.counter": "Issue {0} of {1}",
        "a11y.widget.ignore": "Ignore",
        "a11y.widget.issue.none": "No accessibility issues detected",
        "a11y.widget.next": "Next issue",
        "a11y.widget.previous": "Previous issue",
        "a11y.widget.legacyrepair": "Repair issue",
        "a11y.widget.repair": "Repair",
        "a11y.widget.title": "Accessibility Checker",
        "a11y.widget.help.title": "Click for more info",
        "a11y.control.tooltip": "Accessibility checker",
        "a11y.control.menutext": "Accessibility checker...",
        error: "Error",
        warning: "Warning",
        info: "Info",
        success: "Success"
    }
      , J = e=>K[e]
      , Q = e=>Array.isArray(e) ? U.translate([J(e[0]), ...e.slice(1)]) : U.translate(J(e))
      , X = e=>{
        if (null == e)
            throw new Error("Node cannot be null or undefined");
        return {
            dom: e
        }
    }
      , Y = (e,t)=>{
        const r = (t || document).createElement(e);
        return X(r)
    }
      , Z = X
      , ee = (e,t)=>{
        const r = e.dom;
        if (1 !== r.nodeType)
            return !1;
        {
            const e = r;
            if (void 0 !== e.matches)
                return e.matches(t);
            if (void 0 !== e.msMatchesSelector)
                return e.msMatchesSelector(t);
            if (void 0 !== e.webkitMatchesSelector)
                return e.webkitMatchesSelector(t);
            if (void 0 !== e.mozMatchesSelector)
                return e.mozMatchesSelector(t);
            throw new Error("Browser lacks native selectors")
        }
    }
      , te = e=>1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType || 0 === e.childElementCount
      , re = (e,t,r)=>E(t, (t=>"I1" === t.id ? t.check(e, r) ? [{
        rule: t,
        element: e
    }] : [] : t.check(e) ? [{
        rule: t,
        element: e
    }] : []))
      , oe = (e,t)=>{
        let r = [];
        const o = ((e,t)=>{
            const r = []
              , o = [];
            for (let t = 0, n = e.length; t < n; t++) {
                const n = e[t];
                (a = n,
                a.walkable ? r : o).push(n)
            }
            var a;
            return {
                pass: r,
                fail: o
            }
        }
        )(t.rules)
          , a = s(t.ignoreSelectors) ? [] : t.ignoreSelectors
          , n = o.pass
          , i = o.fail
          , l = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, null);
        for (; l.nextNode(); )
            if (!D(a, (e=>ee(Z(l.currentNode), e)))) {
                const e = re(l.currentNode, n, t.allowDecorativeImages);
                r = r.concat(e)
            }
        const c = ((e,t)=>E(t, (t=>I(t.check(e), (e=>({
            rule: t,
            element: e
        }))))))(e, i);
        return r = r.concat(c),
        r.sort(((e,t)=>((e,t)=>e === t ? 0 : ((e,t)=>((e,t,r)=>0 != (e.compareDocumentPosition(t) & r))(e, t, Node.DOCUMENT_POSITION_PRECEDING))(e, t) ? 1 : -1)(e.element, t.element))),
        r
    }
      , ae = (e,t)=>e.dom === t.dom
      , ne = "undefined" != typeof window ? window : Function("return this;")()
      , ie = (e,t)=>((e,t)=>{
        let r = null != t ? t : ne;
        for (let t = 0; t < e.length && null != r; ++t)
            r = r[e[t]];
        return r
    }
    )(e.split("."), t)
      , se = Object.getPrototypeOf
      , le = e=>{
        const t = ie("ownerDocument.defaultView", e);
        return a(e) && ((e=>((e,t)=>{
            const r = ((e,t)=>ie(e, t))(e, t);
            if (null == r)
                throw new Error(e + " not available on this browser");
            return r
        }
        )("HTMLElement", e))(t).prototype.isPrototypeOf(e) || /^HTML\w*Element$/.test(se(e).constructor.name))
    }
      , ce = e=>t=>(e=>e.dom.nodeType)(t) === e
      , ue = e=>le(e.dom)
      , de = ce(1)
      , pe = ce(3)
      , he = ce(9)
      , me = ce(11)
      , ye = e=>t=>de(t) && t.dom.nodeName.toLowerCase() === e
      , ge = e=>Z(e.dom.ownerDocument)
      , ve = e=>v.from(e.dom.parentNode).map(Z)
      , we = e=>v.from(e.dom.previousSibling).map(Z)
      , be = e=>R(((e,t)=>{
        const r = []
          , o = e=>(r.push(e),
        t(e));
        let a = t(e);
        do {
            a = a.bind(o)
        } while (a.isSome());
        return r
    }
    )(e, we))
      , fe = e=>I(e.dom.childNodes, Z)
      , ke = c(Element.prototype.attachShadow) && c(Node.prototype.getRootNode) ? e=>Z(e.dom.getRootNode()) : e=>he(e) ? e : ge(e)
      , xe = e=>Z(e.dom.host)
      , Ae = e=>{
        const t = pe(e) ? e.dom.parentNode : e.dom;
        if (null == t || null === t.ownerDocument)
            return !1;
        const r = t.ownerDocument;
        return (e=>{
            const t = ke(e);
            return me(r = t) && l(r.dom.host) ? v.some(t) : v.none();
            var r
        }
        )(Z(t)).fold((()=>r.body.contains(t)), (o = Ae,
        a = xe,
        e=>o(a(e))));
        var o, a
    }
      , Te = e=>{
        const t = e.dom.body;
        if (null == t)
            throw new Error("Body is not available yet");
        return Z(t)
    }
      , Ce = (e,t)=>M(e.dom.childNodes, (e=>t(Z(e)))).map(Z)
      , De = (e,t)=>Ce(e, (e=>ee(e, t)))
      , Ie = (e,t)=>((e,t)=>{
        const r = void 0 === t ? document : t.dom;
        return te(r) ? v.none() : v.from(r.querySelector(e)).map(Z)
    }
    )(t, e)
      , _e = p("error")
      , Ne = p("warning")
      , Se = (e,t)=>{
        const r = e;
        return r.matches ? r.matches(t) : r.webkitMatchesSelector ? r.webkitMatchesSelector(t) : r.mozMatchesSelector ? r.mozMatchesSelector(t) : !!r.msMatchesSelector && r.msMatchesSelector(t)
    }
      , Oe = e=>e.length > 0
      , Me = ((e,t)=>{
        const r = t=>e(t) ? v.from(t.dom.nodeValue) : v.none();
        return {
            get: t=>{
                if (!e(t))
                    throw new Error("Can only get text value of a text node");
                return r(t).getOr("")
            }
            ,
            getOption: r,
            set: (t,r)=>{
                if (!e(t))
                    throw new Error("Can only set raw text value of a text node");
                t.dom.nodeValue = r
            }
        }
    }
    )(pe)
      , Ee = e=>Me.get(e)
      , Re = e=>We(e).isSome()
      , We = e=>Ce(e, (e=>pe(e) && Oe(Ee(e).trim())))
      , He = "strong,b"
      , qe = (e,t)=>{
        return (r = e,
        o = He,
        a = e=>ae(e, t),
        ((e,t,r)=>{
            let a = e.dom;
            const n = c(r) ? r : y;
            for (; a.parentNode; ) {
                a = a.parentNode;
                const e = Z(a);
                if (ee(e, o))
                    return v.some(e);
                if (n(e))
                    break
            }
            return v.none()
        }
        )(r, 0, a)).isSome();
        var r, o, a
    }
      , Ge = (e,t)=>We(e).fold((()=>((e,t)=>{
        for (let r = 0, o = e.length; r < o; ++r)
            if (!0 !== t(e[r]))
                return !1;
        return !0
    }
    )(fe(e), (e=>Ge(e, t)))), (e=>qe(e, t)))
      , $e = {
        id: "D1",
        wcag: "1.3.1",
        severity: Ne(),
        desckey: "a11y.d1.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H42.html",
        walkable: !0,
        check: e=>{
            const t = Z(e);
            return !(!Se(e, "p") || (r = t,
            He,
            !Ie(r, "strong,b").isSome())) && Ge(t, t);
            var r
        }
        ,
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , Pe = {
        id: "D2",
        wcag: "1.3.1",
        severity: _e(),
        desckey: "a11y.d2.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/general/G141.html",
        walkable: !1,
        check: e=>{
            const t = e.querySelectorAll("h1, h2, h3, h4, h5, h6");
            let r;
            const o = [];
            return _(t, (e=>{
                const t = parseInt(e.tagName.slice(1), 10);
                r && t - r > 1 && o.push(e),
                r = t
            }
            )),
            o
        }
        ,
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , Le = (e,t)=>((e,r)=>N(fe(e), (e=>ee(e, t))))(e)
      , je = (e,t)=>((e,t)=>{
        const r = void 0 === t ? document : t.dom;
        return te(r) ? [] : I(r.querySelectorAll(e), Z)
    }
    )(t, e)
      , Be = {
        id: "D3",
        wcag: "2.4.4",
        severity: _e(),
        desckey: "a11y.d3.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H2.html",
        walkable: !1,
        check: e=>{
            const t = Z(e)
              , r = je(t, "a + a")
              , o = N(r, (e=>{
                const t = R(be(e));
                return O(t, ye("a"), (e=>{
                    return !(pe(t = e) && (r = Ee(t).replace(/[\u200B-\u200D\uFEFF]/g, ""),
                    !Oe(r)));
                    var t, r
                }
                )).exists((t=>t.dom.href === e.dom.href))
            }
            ));
            return I(o, (e=>e.dom))
        }
        ,
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , Ve = (e,t)=>{
        const r = e.nodeName
          , o = ((e,t)=>{
            let r = e.nextSibling;
            for (; null !== r && (t && "#text" === r.nodeName || "BR" === r.nodeName); )
                r = r.nextSibling;
            return r
        }
        )(e, t);
        return null !== o && o.nodeName === r && o
    }
      , Fe = (e,t,r)=>{
        const o = [];
        if (t(e)) {
            o.push(e);
            let a = Ve(e, r);
            for (; !1 !== a && t(a); )
                o.push(a),
                a = Ve(a, r)
        }
        return o
    }
      , ze = (e,t)=>{
        let r = -1;
        for (let o = 0; o < e.length; o++)
            if (e[o] === t) {
                r = o;
                break
            }
        return r
    }
      , Ue = (e,t)=>{
        const r = e.querySelectorAll("p,h1,h2,h3,h4,h5,h6")
          , o = [];
        let a = 0;
        for (; a < r.length; ) {
            const e = r[a]
              , n = Fe(e, t, !0);
            if (n.length > 1) {
                o.push(e);
                const t = n[n.length - 1]
                  , i = ze(r, t);
                a = -1 === i ? a + 1 : i
            } else
                l(e.firstChild) ? (Fe(e.firstChild, t, !1).length > 1 && o.push(e),
                a++) : a++
        }
        return o
    }
      , Ke = e=>{
        var t;
        return l(null === (t = e.textContent) || void 0 === t ? void 0 : t.match(/^\s{0,}([a-z1-9]|i+)\s{0,}[.)-]/gim))
    }
      , Je = {
        id: "D4o",
        wcag: "1.3.1",
        severity: _e(),
        desckey: "a11y.d4.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H48.html",
        walkable: !1,
        check: e=>Ue(e, Ke),
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , Qe = e=>{
        var t;
        return l(null === (t = e.textContent) || void 0 === t ? void 0 : t.match(/^\s{0,}(\*|-)\s{0,}/gim))
    }
      , Xe = {
        id: "D4u",
        wcag: "1.3.1",
        severity: _e(),
        desckey: "a11y.d4.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H48.html",
        walkable: !1,
        check: e=>Ue(e, Qe),
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , Ye = Object.keys
      , Ze = Object.hasOwnProperty
      , et = (e,t)=>{
        const r = Ye(e);
        for (let o = 0, a = r.length; o < a; o++) {
            const a = r[o];
            t(e[a], a)
        }
    }
      , tt = e=>(t,r)=>{
        e[r] = t
    }
      , rt = (e,t)=>Ze.call(e, t)
      , ot = (e,t,r)=>{
        ((e,t,r)=>{
            if (!(o(r) || i(r) || u(r)))
                throw console.error("Invalid call to Attribute.set. Key ", t, ":: Value ", r, ":: Element ", e),
                new Error("Attribute value was not simple");
            e.setAttribute(t, r + "")
        }
        )(e.dom, t, r)
    }
      , at = (e,t)=>{
        const r = e.dom.getAttribute(t);
        return null === r ? void 0 : r
    }
      , nt = (e,t)=>v.from(at(e, t))
      , it = (e,t)=>{
        e.dom.removeAttribute(t)
    }
      , st = (e,t)=>{
        const r = e.dom
          , o = window.getComputedStyle(r).getPropertyValue(t);
        return "" !== o || Ae(e) ? o : lt(r, t)
    }
      , lt = (e,t)=>(e=>void 0 !== e.style && c(e.style.getPropertyValue))(e) ? e.style.getPropertyValue(t) : ""
      , ct = (e,t,r,o)=>({
        red: e,
        green: t,
        blue: r,
        alpha: o
    })
      , ut = e=>{
        const t = e=>e <= .03928 ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4)
          , r = e.red / 255
          , o = e.green / 255
          , a = e.blue / 255;
        return .2126 * t(r) + .7152 * t(o) + .0722 * t(a)
    }
      , dt = (e,t)=>{
        const r = e.alpha + t.alpha * (1 - e.alpha)
          , o = (e.red * e.alpha + t.red * t.alpha * (1 - e.alpha)) / r
          , a = (e.green * e.alpha + t.green * t.alpha * (1 - e.alpha)) / r
          , n = (e.blue * e.alpha + t.blue * t.alpha * (1 - e.alpha)) / r;
        return ct(Math.ceil(o), Math.ceil(a), Math.ceil(n), r)
    }
      , pt = e=>{
        const t = (e,t,r,o)=>{
            const a = parseInt(e, 10)
              , n = parseInt(t, 10)
              , i = parseInt(r, 10)
              , s = parseFloat(o);
            return v.some(ct(a, n, i, s))
        }
        ;
        if ("transparent" === e)
            return t("0", "0", "0", "0");
        const r = /^rgb\((\d+),\s*(\d+),\s*(\d+)\)/.exec(e);
        if (null !== r)
            return t(r[1], r[2], r[3], "1");
        const o = /^rgba\((\d+),\s*(\d+),\s*(\d+),\s*(\d?(?:\.\d+)?)\)/.exec(e);
        return null !== o ? t(o[1], o[2], o[3], o[4]) : v.none()
    }
      , ht = (e,t)=>{
        const r = parseFloat(st(e, "opacity"));
        return r < 1 ? ct(t.red, t.green, t.blue, t.alpha * r) : t
    }
      , mt = (e,t)=>yt(e).filter((e=>e < t)).isSome()
      , yt = e=>{
        const t = (e=>{
            const t = ge(e)
              , r = Te(t)
              , o = [e].concat(((e,t)=>{
                const r = c(t) ? t : y;
                let o = e.dom;
                const a = [];
                for (; null !== o.parentNode && void 0 !== o.parentNode; ) {
                    const e = o.parentNode
                      , t = Z(e);
                    if (a.push(t),
                    !0 === r(t))
                        break;
                    o = e
                }
                return a
            }
            )(e, (e=>ae(e, r))))
              , a = S(o, ((e,t)=>{
                if (1 === e.alpha)
                    return e;
                const r = st(t, "background-color");
                return pt(r).bind((r=>{
                    const o = ht(t, r);
                    return o.alpha > 0 ? v.some(dt(e, o)) : v.none()
                }
                )).getOr(e)
            }
            ), ct(0, 0, 0, 0));
            return a.alpha < 1 ? dt(a, ct(255, 255, 255, 1)) : a
        }
        )(e);
        return ((e,t)=>{
            const r = st(e, "color");
            return pt(r).bind((r=>{
                const o = ht(e, r)
                  , a = o.alpha < 1 ? dt(o, t) : o;
                return v.some(a)
            }
            ))
        }
        )(e, t).map((e=>{
            const r = ut(t);
            return ((e,t)=>(Math.max(e, t) + .05) / (Math.min(e, t) + .05))(ut(e), r)
        }
        ))
    }
      , gt = {
        id: "D5c",
        wcag: "1.4.3",
        severity: _e(),
        desckey: "a11y.d5c.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/general/G17.html",
        walkable: !0,
        check: e=>{
            const t = Z(e);
            return Re(t) && mt(t, 7)
        }
        ,
        levels: [$()],
        htmlversions: [W(), H()]
    }
      , vt = e=>{
        const t = st(e, "font-size")
          , r = new RegExp(".*px").test(t)
          , o = /(\d*\.?\d*)(.*)/.exec(t);
        return r && null !== o ? v.some(Number(o[1])) : v.none()
    }
      , wt = e=>{
        const t = (e=>{
            const t = st(e, "font-weight");
            return !("bold" !== t && "bolder" !== t) || !!/^[0-9]*$/.test(r = t) && parseInt(r, 10) >= 700;
            var r
        }
        )(e)
          , r = ge(e)
          , o = Te(r)
          , a = vt(o);
        return vt(e).fold(y, (e=>a.fold((()=>e >= 24 || t && e >= 19), (r=>e >= 1.5 * r || t && e >= 1.2 * r))))
    }
      , bt = {
        id: "D5a",
        wcag: "1.4.3",
        severity: _e(),
        desckey: "a11y.d5a.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/general/G145.html",
        walkable: !0,
        check: e=>{
            const t = Z(e);
            return Re(t) && wt(t) && mt(t, 3)
        }
        ,
        levels: [G()],
        htmlversions: [W(), H()]
    }
      , ft = {
        id: "D5b",
        wcag: "1.4.3",
        severity: _e(),
        desckey: "a11y.d5b.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/general/G18.html",
        walkable: !0,
        check: e=>{
            const t = Z(e);
            return Re(t) && !wt(t) && mt(t, 4.5)
        }
        ,
        levels: [G()],
        htmlversions: [W(), H()]
    }
      , kt = {
        id: "H93",
        wcag: "4.1.1",
        severity: _e(),
        desckey: "a11y.h93.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H93.html",
        walkable: !1,
        check: e=>{
            const t = Z(e)
              , r = je(t, "*[id]")
              , o = S(r, ((e,t)=>{
                const r = at(t, "id");
                if (void 0 === r)
                    return e;
                if (rt(e.problems, r))
                    return e;
                if (rt(e.ids, r)) {
                    const t = e.ids[r];
                    return {
                        ...e,
                        problems: {
                            ...e.problems,
                            [r]: t
                        }
                    }
                }
                return {
                    ...e,
                    ids: {
                        ...e.ids,
                        [r]: t.dom
                    }
                }
            }
            ), {
                ids: {},
                problems: {}
            });
            return ((e,t)=>{
                const r = [];
                return et(e, ((e,o)=>{
                    r.push(t(e, o))
                }
                )),
                r
            }
            )(o.problems, h)
        }
        ,
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , xt = {
        id: "I1",
        wcag: "1.1.1",
        severity: _e(),
        desckey: "a11y.i1.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/general/G95.html",
        walkable: !0,
        check: (e,t)=>{
            const r = e.hasAttribute("alt")
              , o = r && "" === e.getAttribute("alt").trim()
              , a = e.hasAttribute("role") && "presentation" === e.getAttribute("role");
            return Se(e, "img") && (!r || (t ? r && o && !a || r && !o && a : o || a))
        }
        ,
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , At = {
        id: "I2",
        wcag: "1.1.1",
        severity: _e(),
        desckey: "a11y.i2.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/general/G95.html",
        walkable: !0,
        check: e=>(e=>Se(e, "img[alt][src]"))(e) && e.src.split("/").pop() === e.alt.split("/").pop(),
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , Tt = {
        id: "T1",
        wcag: "1.3.1",
        severity: _e(),
        desckey: "a11y.t1.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H39.html",
        walkable: !0,
        check: e=>{
            if (Se(e, "table")) {
                const t = e.querySelector("caption");
                return !t || Se(t, ":empty")
            }
            return !1
        }
        ,
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , Ct = {
        id: "T2",
        wcag: "1.3.1",
        severity: Ne(),
        desckey: "a11y.t2.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H73.html",
        walkable: !0,
        check: e=>Se(e, "table") && l(e.querySelector("[rowspan]") || e.querySelector("[colspan]")) && !e.hasAttribute("summary"),
        levels: [q(), G(), $()],
        htmlversions: [W()]
    }
      , Dt = {
        id: "T3",
        wcag: "1.3.1",
        severity: _e(),
        desckey: "a11y.t3.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H73.html",
        walkable: !0,
        check: e=>{
            if (Se(e, "table") && e.hasAttribute("summary")) {
                const t = e.querySelectorAll("caption");
                return t.length > 0 && e.getAttribute("summary") === t[0].innerHTML
            }
            return !1
        }
        ,
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , It = {
        id: "T4b",
        wcag: "1.3.1",
        severity: _e(),
        desckey: "a11y.t4b.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H51.html",
        walkable: !0,
        check: e=>"table" === e.nodeName.toLowerCase() && 0 === e.querySelectorAll("th").length,
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , _t = {
        id: "T4c",
        wcag: "1.3.1",
        severity: _e(),
        desckey: "a11y.t4c.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H63.html",
        walkable: !0,
        check: e=>{
            return !("th" !== e.nodeName.toLowerCase() || (t = e).hasAttribute("scope") && /row|col|rowgroup|colgroup/i.test(t.getAttribute("scope")));
            var t
        }
        ,
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    }
      , Nt = (e,t)=>0 === e.querySelectorAll(t).length
      , St = {
        id: "T4a",
        wcag: "1.3.1",
        severity: _e(),
        desckey: "a11y.t4a.description",
        url: "https://www.w3.org/WAI/WCAG21/Techniques/html/H51.html",
        walkable: !0,
        check: e=>{
            return "table" === e.nodeName.toLowerCase() && (Nt(t = e, "tr") || Nt(t, "td"));
            var t
        }
        ,
        levels: [q(), G(), $()],
        htmlversions: [W(), H()]
    };
    var Ot = {
        all: p([$e, Pe, Be, Je, Xe, bt, ft, gt, kt, xt, At, Tt, Ct, Dt, _t, St, It])
    };
    const Mt = (e=>{
        const t = "ephox-foam".replace(/\./g, "-");
        return {
            resolve: e=>t + "-" + e
        }
    }
    )().resolve
      , Et = (e,t,r)=>{
        ot(e, t, r)
    }
      , Rt = (e,t,r)=>{
        it(e, t),
        it(e, r)
    }
      , Wt = e=>{
        const t = e.editor;
        return {
            start: t=>{
                ((e,t,r,o,a,n)=>{
                    _(e, (e=>{
                        const r = ((e,t,r,o)=>{
                            switch (e) {
                            case "info":
                                return v.some(t);
                            case "warning":
                                return v.some(r);
                            case "error":
                                return v.some(o);
                            default:
                                return v.none()
                            }
                        }
                        )(e.severity, o, a, n).toArray().concat([t]);
                        _(r, (t=>{
                            ot(e.element, t, 1)
                        }
                        ))
                    }
                    )),
                    v.from(e[0]).each((e=>{
                        Et(e.element, r, e.severity)
                    }
                    ))
                }
                )(t, e.violation, e.current, e.info, e.warn, e.error)
            }
            ,
            moveTo: (r,o)=>{
                ((e,t,r,o)=>{
                    const a = je(e, "[" + t + "]");
                    _(a, (e=>{
                        it(e, t)
                    }
                    )),
                    Et(r, t, o)
                }
                )(Z(t.getBody()), e.current, r, o)
            }
            ,
            stop: ()=>{
                ((e,t,r,o,a,n)=>{
                    const i = je(e, "[" + t + "]");
                    _(i, (e=>{
                        _([t, r, o, a, n], (t=>{
                            it(e, t)
                        }
                        )),
                        Rt(e, t, r)
                    }
                    ))
                }
                )(Z(t.getBody()), e.violation, e.current, e.info, e.warn, e.error)
            }
            ,
            exclude: t=>{
                Rt(t, e.violation, e.current)
            }
        }
    }
      , Ht = "data-" + Mt("a11y-current-violation")
      , qt = "data-" + Mt("a11y-violation")
      , Gt = "data-" + Mt("a11y-severity-info")
      , $t = "data-" + Mt("a11y-severity-warn")
      , Pt = "data-" + Mt("a11y-severity-error")
      , Lt = "data-" + Mt("accessibility-ignore")
      , jt = p(Lt)
      , Bt = e=>({
        id: e.id.toUpperCase(),
        severity: e.severity,
        url: e.url,
        description: Q(e.description),
        element: e.element.dom
    })
      , Vt = t=>{
        const r = (e=>{
            const t = (e=>{
                const t = e.options.get("a11ychecker_ignored_rules");
                return E(tinymce.explode(t), (e=>e.length > 0 ? [e.toUpperCase()] : []))
            }
            )(e)
              , r = j(e)
              , o = B(e)
              , a = Ot.all().slice();
            return {
                rules: N(a, (e=>!C(t, e.id.toUpperCase()) && C(e.levels, r) && C(e.htmlversions, o))),
                allowDecorativeImages: z(e),
                ignoreSelectors: ["img[data-mce-placeholder]", "[data-mce-bogus=all] *", "[data-mce-bogus]"]
            }
        }
        )(t);
        (e=>{
            e.on("init", (()=>{
                _([Lt, qt, Gt, $t, Pt, Ht], (t=>{
                    e.serializer.addTempAttr(t)
                }
                ))
            }
            ))
        }
        )(t);
        const o = e(!1)
          , a = (e=>({
            audit: t=>oe(t, e)
        }))(r)
          , n = (e=>Wt({
            editor: e,
            violation: qt,
            current: Ht,
            info: Gt,
            warn: $t,
            error: Pt
        }))(t)
          , i = jt();
        let s = []
          , l = 0;
        const c = ()=>{
            const e = a.audit(t.getBody())
              , r = ((e,t)=>I(t, (t=>{
                const r = t.rule;
                return {
                    id: r.id.toUpperCase(),
                    description: "I1" !== r.id ? r.desckey : z(e) ? `${r.desckey}.decorativeAllowed` : `${r.desckey}.decorativeNotAllowed`,
                    element: Z(t.element),
                    url: r.url,
                    severity: r.severity
                }
            }
            )))(t, e);
            return N(r, (e=>{
                const r = (a = e.element,
                nt(a, i).map((e=>e.split(" "))).getOr([]))
                  , o = F(t);
                var a;
                return !C(r, e.id) && o(Bt(e))
            }
            ))
        }
          , u = e=>(l += e,
        l = l < 0 ? l + s.length : l % s.length,
        n.moveTo(s[l].element, s[l].severity),
        t.selection.scrollIntoView(s[l].element.dom),
        {
            summaryLabel: Q(["a11y.widget.counter", l + 1, s.length]),
            issue: s[l],
            index: l + 1
        })
          , d = ()=>s.length > 0 ? v.some(u(0)) : v.none()
          , p = ()=>{
            o.set(!0),
            s = c(),
            l = 0
        }
          , h = ()=>{
            n.stop(),
            o.set(!1),
            l = 0,
            s = []
        }
        ;
        return {
            scan: ()=>(p(),
            n.start(s),
            d()),
            stepIssue: u,
            getIssues: ()=>s.slice(0),
            getCurrent: d,
            getReport: ()=>{
                const e = o.get();
                try {
                    return e || p(),
                    I(s, Bt)
                } finally {
                    e || h()
                }
            }
            ,
            resolveCurrent: e=>(e && ((e,t,r)=>{
                const o = nt(e, t).map((e=>e.concat(" ", r))).getOr(r);
                ot(e, t, o)
            }
            )(s[l].element, i, s[l].id),
            s = c(),
            d()),
            clear: h,
            isAuditing: ()=>o.get()
        }
    }
      , Ft = (e,t)=>{
        const r = t.ui.registry.getAll().icons;
        return v.from(r[e]).orThunk((()=>v.from(r["temporary-placeholder"]))).getOr("!not found!")
    }
      , zt = (e,t,r,o,a)=>{
        const n = Q(r)
          , i = Q(t)
          , s = `<div class="accessibility-issue__description"><div><div><div class="tox-icon">${Ft("info" === r ? "info" : "warning", e)}</div><h2>${n}</h2></div><p>${i}</p></div><div>` + ((e,t,r)=>{
            const o = `<a href="${r}" title="${Q("a11y.widget.help.title")}" class="tox-button tox-button--naked tox-button--icon" target="_blank" data-alloy-tabstop="true" tabindex="-1"><div class="tox-icon">${Ft(e, t)}</div></a>`;
            return "help" === e ? o : `<div class="tox-icon">${Ft(e, t)}</div>`
        }
        )(o, e, a) + "</div></div>";
        return s
    }
      , Ut = (e,t,r,o)=>({
        type: "selectbox",
        label: t,
        name: e,
        items: I(r, (e=>({
            text: o(e.text),
            value: e.value
        })))
    })
      , Kt = (e,t)=>({
        type: "input",
        name: e,
        label: t
    })
      , Jt = (e,t,r)=>({
        type: "label",
        label: t,
        items: [{
            type: "checkbox",
            name: e,
            label: r
        }]
    })
      , Qt = (e,t)=>({
        title: Q("a11y.widget.title"),
        body: {
            type: "panel",
            items: [{
                type: "panel",
                classes: ["tox-accessibility-issue", "accessibility-issue--success"],
                items: [{
                    type: "htmlpanel",
                    html: zt(e, "a11y.widget.issue.none", "success", "checkmark"),
                    presets: "presentation"
                }]
            }]
        },
        buttons: [{
            type: "submit",
            name: "ok",
            text: "OK",
            primary: !0
        }],
        onSubmit: e=>e.close(),
        onClose: t
    })
      , Xt = (e,t,r)=>{
        e.redial(t),
        e.focus(r)
    }
    ;
    var Yt;
    !function(e) {
        e.Next = "next",
        e.Prev = "prev",
        e.Ignore = "ignore",
        e.Ok = "ok",
        e.Repair = "repair"
    }(Yt || (Yt = {}));
    const Zt = ({issue: e, summaryLabel: t},r,o,a,n,i)=>{
        const s = V(n)
          , l = e=>Zt(e, r, o, v.none(), n, i)
          , c = a=>(s,{name: c})=>{
            if (c === Yt.Next || c === Yt.Prev) {
                const e = r.stepIssue(c === Yt.Next ? 1 : -1);
                Xt(s, l(e), c)
            } else
                c === Yt.Ignore ? r.resolveCurrent(!0).fold((()=>Xt(s, Qt(n, i), Yt.Ok)), (e=>Xt(s, l(e), Yt.Ignore))) : c === Yt.Repair && ((a,s)=>{
                    const c = s=>{
                        Xt(a, Zt({
                            issue: e,
                            summaryLabel: t
                        }, r, o, v.some(s), n, i), Yt.Repair)
                    }
                      , u = ()=>r.resolveCurrent(!1).fold((()=>r.scan().fold((()=>Xt(a, Qt(n, i), Yt.Ok)), (e=>Xt(a, l(e), Yt.Ignore)))), (e=>Xt(a, l(e), Yt.Ignore)));
                    s.each((t=>{
                        t.repair(e.element, e.id, ((e,t)=>{
                            const r = {}
                              , o = {};
                            return ((e,t,r,o)=>{
                                et(e, ((e,a)=>{
                                    (t(e, a) ? r : o)(e, a)
                                }
                                ))
                            }
                            )(e, t, tt(r), tt(o)),
                            {
                                t: r,
                                f: o
                            }
                        }
                        )(a.getData(), ((t,r)=>{
                            return o = r,
                            "" === (a = e.id) || o.length >= a.length && o.substr(0, 0 + a.length) === a;
                            var o, a
                        }
                        )).t, (e=>e.fold(c, u)))
                    }
                    ))
                }
                )(s, a)
        }
          , u = t=>r=>t.each((t=>{
            t.onChange.each((t=>t(r, r.getData(), e))),
            t.shouldDisableRepair.each((t=>{
                const o = t(r.getData(), e);
                r.setEnabled(Yt.Repair, !o)
            }
            ))
        }
        ))
          , d = (r,o,a)=>{
            const l = "warning" === (d = e.severity) ? "warn" : d;
            var d;
            const p = o.map((()=>({
                type: "panel",
                classes: ["accessibility-issue__repair"],
                items: o.map((e=>e.items)).getOr([])
            }))).toArray();
            return {
                title: Q("a11y.widget.title"),
                body: {
                    type: "panel",
                    classes: ["tox-accessibility-issue", `accessibility-issue--${l}`],
                    items: [{
                        type: "panel",
                        classes: ["accessibility-issue__header"],
                        items: [{
                            type: "htmlpanel",
                            html: `<h1>${t}</h1>`,
                            presets: "presentation"
                        }, {
                            type: "button",
                            name: Yt.Prev,
                            text: Q("a11y.widget.previous"),
                            icon: "action-prev",
                            borderless: !0
                        }, {
                            type: "button",
                            name: Yt.Next,
                            text: Q("a11y.widget.next"),
                            icon: "action-next",
                            borderless: !0
                        }]
                    }, {
                        type: "htmlpanel",
                        html: zt(n, e.description, e.severity, "help", s(e.id)),
                        presets: "presentation"
                    }, ...p]
                },
                buttons: [{
                    type: "custom",
                    name: Yt.Ignore,
                    text: Q("a11y.widget.ignore")
                }, {
                    type: "custom",
                    name: Yt.Repair,
                    text: Q("a11y.widget.repair"),
                    enabled: !a,
                    primary: !0
                }],
                initialData: {
                    ...o.map((e=>e.initialData)).getOr({})
                },
                onAction: c(r),
                onChange: u(r),
                onClose: i
            }
        }
        ;
        return o(e.id).fold((()=>d(v.none(), v.none(), !0)), (t=>{
            const r = ((e,t,r)=>{
                const o = t.element;
                return r.fold((()=>e.ui.map((e=>e(t.id, o)))), (r=>e.ui.map((e=>{
                    const a = e(t.id, o);
                    return {
                        items: a.items.concat([(n = r,
                        {
                            type: "htmlpanel",
                            html: `<div class="tox-form__group--error">${n}</div>`
                        })]),
                        initialData: a.initialData
                    };
                    var n
                }
                ))))
            }
            )(t, e, a)
              , o = t.shouldDisableRepair.bind((t=>r.map((r=>t(r.initialData, e))))).getOr(!1);
            return d(v.some(t), r, o)
        }
        ))
    }
      , er = (e,t)=>{
        ve(e).each((r=>{
            r.dom.insertBefore(t.dom, e.dom)
        }
        ))
    }
      , tr = (e,t)=>{
        const r = (e=>v.from(e.dom.nextSibling).map(Z))(e);
        r.fold((()=>{
            ve(e).each((e=>{
                rr(e, t)
            }
            ))
        }
        ), (e=>{
            er(e, t)
        }
        ))
    }
      , rr = (e,t)=>{
        e.dom.appendChild(t.dom)
    }
      , or = (e,t)=>{
        _(t, (t=>{
            rr(e, t)
        }
        ))
    }
      , ar = e=>{
        const t = e.dom;
        null !== t.parentNode && t.parentNode.removeChild(t)
    }
      , nr = e=>{
        const t = fe(e);
        var r, o;
        t.length > 0 && (r = e,
        _(o = t, ((e,t)=>{
            const a = 0 === t ? r : o[t - 1];
            tr(a, e)
        }
        ))),
        ar(e)
    }
      , ir = e=>e.dom.innerHTML
      , sr = e=>{
        const t = t=>t(e)
          , r = p(e)
          , o = ()=>a
          , a = {
            tag: !0,
            inner: e,
            fold: (t,r)=>r(e),
            isValue: g,
            isError: y,
            map: t=>cr.value(t(e)),
            mapError: o,
            bind: t,
            exists: t,
            forall: t,
            getOr: r,
            or: o,
            getOrThunk: r,
            orThunk: o,
            getOrDie: r,
            each: t=>{
                t(e)
            }
            ,
            toOptional: ()=>v.some(e)
        };
        return a
    }
      , lr = e=>{
        const t = ()=>r
          , r = {
            tag: !1,
            inner: e,
            fold: (t,r)=>t(e),
            isValue: y,
            isError: g,
            map: t,
            mapError: t=>cr.error(t(e)),
            bind: t,
            exists: y,
            forall: g,
            getOr: h,
            or: h,
            getOrThunk: m,
            orThunk: m,
            getOrDie: (o = String(e),
            ()=>{
                throw new Error(o)
            }
            ),
            each: d,
            toOptional: v.none
        };
        var o;
        return r
    }
      , cr = {
        value: sr,
        error: lr,
        fromOption: (e,t)=>e.fold((()=>lr(t)), sr)
    }
      , ur = e=>((e,t)=>Z(e.dom.cloneNode(!0)))(e)
      , dr = (e,t)=>cr.error(t(e))
      , pr = (e,t,r,o,a,n)=>0 === t.length ? dr(o, n) : hr(e, t, r, a, n)
      , hr = (e,t,r,o,a)=>t === r ? dr(o, a) : cr.value(e)
      , mr = e=>{
        const t = e.split("/");
        return v.from(t.pop())
    }
      , yr = (e,t,r,o,a,n)=>{
        const i = nt(e, "src").bind(mr).getOr("")
          , s = r[`${t}_textinput`];
        return r[`${t}_checkbox`] ? (e=>(ot(e, "alt", ""),
        ot(e, "role", "presentation"),
        cr.value(e)))(e) : pr(e, s, i, o, a, n).map((e=>(ot(e, "alt", s),
        "presentation" === at(e, "role") && it(e, "role"),
        e)))
    }
      , gr = e=>e.dom.textContent
      , vr = (e,t,r,o,a,n)=>{
        const i = at(e, "summary");
        return pr(e, r[t], i, o, a, n).map((o=>{
            const a = De(e, "caption").fold((()=>Y("caption")), (e=>{
                var t;
                return (t = e).dom.textContent = "",
                _(fe(t), (e=>{
                    ar(e)
                }
                )),
                e
            }
            ));
            return ((e,t)=>{
                e.dom.textContent = t
            }
            )(a, r[t]),
            ((e,t)=>{
                (e=>((e,t)=>{
                    const r = e.dom.childNodes;
                    return v.from(r[0]).map(Z)
                }
                )(e))(e).fold((()=>{
                    rr(e, t)
                }
                ), (r=>{
                    e.dom.insertBefore(t.dom, r.dom)
                }
                ))
            }
            )(o, a),
            o
        }
        ))
    }
      , wr = e=>`${e}_checkbox`
      , br = e=>`${e}_textinput`
      , fr = (e,t)=>{
        const r = t.id
          , o = !0 === e[wr(r)]
          , a = e[br(r)].length > 0;
        return !o && !a
    }
      , kr = (e,t,r)=>{
        const o = r.id
          , a = wr(o)
          , n = br(o);
        !0 === t[a] ? (e.setEnabled(n, !1),
        e.setEnabled(Yt.Repair, !0)) : (e.setEnabled(n, !0),
        t[n].length > 0 ? (e.setEnabled(Yt.Repair, !0),
        e.setEnabled(a, !0)) : (e.setEnabled(a, !0),
        e.setEnabled(Yt.Repair, !1)))
    }
      , xr = (e,t)=>{
        const r = Kt(br(t), Q((o = "a11y.i1.repair.info",
        e ? `${o}.decorativeAllowed` : `${o}.decorativeNotAllowed`)));
        var o;
        return e ? [Jt(wr(t), Q("a11y.i1.repair.checkboxlabel"), Q("a11y.i1.repair.checkboxtext")), r] : [r]
    }
      , Ar = (e,t,r)=>{
        const o = at(e, "alt")
          , a = t ? {
            [wr(r)]: !1
        } : {};
        return {
            [br(r)]: o || "",
            ...a
        }
    }
      , Tr = (t,r)=>{
        const o = (()=>{
            const t = (t=>{
                const r = e(v.none())
                  , o = ()=>r.get().each(t);
                return {
                    clear: ()=>{
                        o(),
                        r.set(v.none())
                    }
                    ,
                    isSet: ()=>r.get().isSome(),
                    get: ()=>r.get(),
                    set: e=>{
                        o(),
                        r.set(v.some(e))
                    }
                }
            }
            )(d);
            return {
                ...t,
                on: e=>t.get().each(e)
            }
        }
        )()
          , a = ()=>{
            o.clear(),
            r.clear()
        }
          , n = ()=>{
            const e = ((e,t,r,o,a)=>t.scan().fold((()=>e(Qt(o, a))), (n=>e(Zt(n, t, r, v.none(), o, a)))))((e=>t.windowManager.open(e, {
                inline: "toolbar",
                ariaAttrs: !0
            })), r, (e=>{
                const t = z(e)
                  , r = {
                    H93: v.some({
                        ui: v.some(((e,t)=>({
                            items: [Ut(e, Q("a11y.h93.repair.info"), [{
                                text: "a11y.h93.repair.deduplicate.others",
                                value: "others"
                            }, {
                                text: "a11y.h93.repair.deduplicate.this",
                                value: "this"
                            }, {
                                text: "a11y.h93.repair.deduplicate.all",
                                value: "all"
                            }], Q)],
                            initialData: {
                                [e]: ""
                            }
                        }))),
                        repair: (t,r,o,a)=>{
                            e.undoManager.transact((()=>{
                                a(((e,t,r,o)=>{
                                    const a = r[t]
                                      , n = "all" === a || "this" === a;
                                    if ("all" === a || "others" === a) {
                                        const t = at(e, "id")
                                          , r = o.getBody()
                                          , a = Z(r)
                                          , n = je(a, `*[id="${t}"]`)
                                          , i = N(n, (t=>!ae(t, e)));
                                        _(i, (e=>{
                                            it(e, "id")
                                        }
                                        ))
                                    }
                                    return n && it(e, "id"),
                                    cr.value(e)
                                }
                                )(t, r, o, e))
                            }
                            ))
                        }
                        ,
                        shouldDisableRepair: v.none(),
                        onChange: v.none()
                    }),
                    I1: v.some({
                        ui: v.some(((e,r)=>({
                            items: xr(t, e),
                            initialData: Ar(r, t, e)
                        }))),
                        repair: (t,r,o,a)=>{
                            e.undoManager.transact((()=>{
                                a(yr(t, r, o, "a11y.i1.repair.errors.empty", "a11y.i1.repair.errors.duplicate", Q))
                            }
                            ))
                        }
                        ,
                        shouldDisableRepair: t ? v.some(fr) : v.none(),
                        onChange: t ? v.some(kr) : v.none()
                    }),
                    I2: v.some({
                        ui: v.some(((e,r)=>({
                            items: xr(t, e),
                            initialData: Ar(r, t, e)
                        }))),
                        repair: (t,r,o,a)=>{
                            e.undoManager.transact((()=>{
                                a(yr(t, r, o, "a11y.i1.repair.errors.empty", "a11y.i1.repair.errors.duplicate", Q))
                            }
                            ))
                        }
                        ,
                        shouldDisableRepair: t ? v.some(fr) : v.none(),
                        onChange: t ? v.some(kr) : v.none()
                    }),
                    T1: v.some({
                        ui: v.some(((e,t)=>({
                            items: [Kt(e, Q("a11y.t1.repair.info"))],
                            initialData: {
                                [e]: ""
                            }
                        }))),
                        repair: (t,r,o,a)=>{
                            e.undoManager.transact((()=>{
                                a(vr(t, r, o, "a11y.t1.repair.errors.empty", "a11y.t1.repair.errors.duplicate", Q))
                            }
                            ))
                        }
                        ,
                        shouldDisableRepair: v.none(),
                        onChange: v.none()
                    }),
                    T2: v.some({
                        ui: v.some(((e,t)=>({
                            items: [Kt(e, Q("a11y.t2.repair.info"))],
                            initialData: {
                                [e]: ""
                            }
                        }))),
                        repair: (t,r,o,a)=>{
                            e.undoManager.transact((()=>{
                                a(((e,t,r,o,a,n)=>{
                                    const i = Ie(e, "caption").filter(ue).map(gr).getOr("");
                                    return pr(e, r[t], i, "a11y.t2.repair.errors.empty", "a11y.t2.repair.errors.duplicate", n).map((o=>(ot(e, "summary", r[t]),
                                    o)))
                                }
                                )(t, r, o, 0, 0, Q))
                            }
                            ))
                        }
                        ,
                        shouldDisableRepair: v.none(),
                        onChange: v.none()
                    }),
                    T3: v.some({
                        ui: v.some(((e,t)=>{
                            const r = De(t, "caption").fold(p(""), ir);
                            return {
                                items: [Kt(e, Q("a11y.t1.repair.info"))],
                                initialData: {
                                    [e]: r
                                }
                            }
                        }
                        )),
                        repair: (t,r,o,a)=>{
                            e.undoManager.transact((()=>{
                                a(vr(t, r, o, "a11y.t1.repair.errors.empty", "a11y.t1.repair.errors.duplicate", Q))
                            }
                            ))
                        }
                        ,
                        shouldDisableRepair: v.none(),
                        onChange: v.none()
                    }),
                    T4A: v.none(),
                    T4B: v.some({
                        ui: v.some(((e,t)=>({
                            items: [Ut(e, Q("a11y.t4b.repair.info"), [{
                                text: "a11y.t4c.repair.header.row",
                                value: "row"
                            }, {
                                text: "a11y.t4c.repair.header.col",
                                value: "col"
                            }], Q)],
                            initialData: {
                                [e]: ""
                            }
                        }))),
                        repair: (t,r,o,a)=>{
                            e.undoManager.transact((()=>{
                                a(((e,t,r)=>{
                                    let o = [];
                                    if ("row" === r[t]) {
                                        const t = Z(e.dom.rows[0]);
                                        o = Le(t, "td")
                                    } else
                                        "col" === r[t] && _(e.dom.rows, (e=>{
                                            De(Z(e), "td").each((e=>{
                                                o.push(e)
                                            }
                                            ))
                                        }
                                        ));
                                    return _(o, (e=>{
                                        const t = Y("th");
                                        _(e.dom.attributes, (r=>{
                                            nt(e, r.name).each((e=>ot(t, r.name, e)))
                                        }
                                        )),
                                        t.dom.innerHTML = e.dom.innerHTML,
                                        tr(e, t),
                                        ar(e)
                                    }
                                    )),
                                    cr.value(e)
                                }
                                )(t, r, o))
                            }
                            ))
                        }
                        ,
                        shouldDisableRepair: v.none(),
                        onChange: v.none()
                    }),
                    T4C: v.some({
                        ui: v.some(((e,t)=>({
                            items: [Ut(e, Q("a11y.t4c.repair.info"), [{
                                text: "a11y.t4c.repair.scope.row",
                                value: "row"
                            }, {
                                text: "a11y.t4c.repair.scope.col",
                                value: "col"
                            }, {
                                text: "a11y.t4c.repair.scope.rowgroup",
                                value: "rowgroup"
                            }, {
                                text: "a11y.t4c.repair.scope.colgroup",
                                value: "colgroup"
                            }], Q)],
                            initialData: {
                                [e]: ""
                            }
                        }))),
                        repair: (t,r,o,a)=>{
                            e.undoManager.transact((()=>{
                                a(((e,t,r)=>(ot(e, "scope", r[t]),
                                cr.value(e)))(t, r, o))
                            }
                            ))
                        }
                        ,
                        shouldDisableRepair: v.none(),
                        onChange: v.none()
                    }),
                    D1: v.some({
                        ui: v.some(((e,t)=>({
                            items: [Ut(e, Q("a11y.d1.repair.info"), [{
                                text: "a11y.d1.repair.block.h1",
                                value: "h1"
                            }, {
                                text: "a11y.d1.repair.block.h2",
                                value: "h2"
                            }, {
                                text: "a11y.d1.repair.block.h3",
                                value: "h3"
                            }, {
                                text: "a11y.d1.repair.block.h4",
                                value: "h4"
                            }, {
                                text: "a11y.d1.repair.block.h5",
                                value: "h5"
                            }, {
                                text: "a11y.d1.repair.block.h6",
                                value: "h6"
                            }], Q)],
                            initialData: {
                                [e]: ""
                            }
                        }))),
                        repair: (t,r,o,a)=>{
                            e.undoManager.transact((()=>{
                                a(((e,t,r)=>{
                                    const o = ge(e)
                                      , a = Y(r[t], o.dom)
                                      , n = fe(e)
                                      , i = I(n, ur);
                                    or(a, i);
                                    const s = je(a, "b,strong");
                                    return _(s, nr),
                                    er(e, a),
                                    ar(e),
                                    cr.value(a)
                                }
                                )(t, r, o))
                            }
                            ))
                        }
                        ,
                        shouldDisableRepair: v.none(),
                        onChange: v.none()
                    }),
                    D2: v.none(),
                    D3: v.some({
                        ui: v.none(),
                        repair: (t,r,o,a)=>{
                            e.undoManager.transact((()=>{
                                a((e=>{
                                    const t = R(be(e));
                                    return M(t, ye("a")).fold((()=>cr.error("Failed to find previous link")), (r=>{
                                        for (const e of t) {
                                            if (ae(e, r))
                                                break;
                                            pe(e) && ar(e)
                                        }
                                        const o = fe(e);
                                        return or(r, o),
                                        ar(e),
                                        cr.value(r)
                                    }
                                    ))
                                }
                                )(t))
                            }
                            ))
                        }
                        ,
                        shouldDisableRepair: v.none(),
                        onChange: v.none()
                    })
                };
                return e=>r.hasOwnProperty(e) ? r[e] : v.none()
            }
            )(t), t, a);
            o.set(e)
        }
          , i = e=>e.close();
        return t.ui.registry.addButton("a11ycheck", {
            tooltip: Q("a11y.control.tooltip"),
            icon: "accessibility-check",
            onAction: n
        }),
        t.ui.registry.addMenuItem("a11ycheck", {
            icon: "accessibility-check",
            text: Q("a11y.control.menutext"),
            onAction: n
        }),
        ()=>o.get().fold(n, i)
    }
    ;
    tinymce.PluginManager.requireLangPack("a11ychecker", "ar,bg_BG,ca,cs,da,de,el,es,eu,fa,fi,fr_FR,he_IL,hi,hr,hu_HU,id,it,ja,kk,ko_KR,ms,nb_NO,nl,pl,pt_PT,pt_BR,ro,ru,sk,sl_SI,sv_SE,th_TH,tr,uk,vi,zh_TW,zh_CN"),
    tinymce.PluginManager.add("a11ychecker", ((e,t)=>{
        if (((e,t)=>!!e && -1 === ((e,t)=>{
            const r = b(e.major, t.major);
            if (0 !== r)
                return r;
            const o = b(e.minor, t.minor);
            if (0 !== o)
                return o;
            const a = b(e.patch, t.patch);
            return 0 !== a ? a : 0
        }
        )((e=>k((e=>[e.majorVersion, e.minorVersion].join(".").split(".").slice(0, 3).join("."))(e)))(e), k(t)))(tinymce, "6.0.0"))
            return console.error('The "a11ychecker" plugin requires at least version 6.0.0 of TinyMCE.'),
            {};
        ((e,t)=>{
            const r = e.options.register;
            r("a11ychecker_css_url", {
                processor: "string",
                default: t + "/css/annotations.css"
            }),
            r("a11ychecker_allow_decorative_images", {
                processor: "boolean"
            });
            const a = [q(), G(), $()];
            r("a11ychecker_level", {
                processor: e=>o(e) && C(a, e),
                default: G()
            });
            const n = [W(), H()];
            r("a11ychecker_html_version", {
                processor: e=>o(e) && C(n, e),
                default: H()
            }),
            r("a11ychecker_issue_url_callback", {
                processor: "function",
                default: e=>`https://www.tiny.cloud/docs/tinymce/${tinymce.majorVersion}/a11ychecker/#${e}`
            }),
            r("a11ychecker_ignored_rules", {
                processor: "string",
                default: ""
            }),
            r("a11ychecker_filter_issue", {
                processor: "function",
                default: g
            })
        }
        )(e, t);
        const r = Vt(e)
          , a = L(e)
          , n = Tr(e, r);
        return e.on("init", (()=>{
            e.dom.loadCSS(a)
        }
        )),
        {
            getReport: r.getReport,
            toggleaudit: n
        }
    }
    ))
}();
